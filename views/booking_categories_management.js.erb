<%= partial('price_definition_creation.js'.to_sym) %>
require(["jquery", "YSDEntityManagement", "YSDEntityManagementComplementHooks",
         "YSDRemoteDataSource", "YSDMemoryDataSource", "YSDSelectSelector", "jquery.ui", "YSDjson2"],
         function($, EntityManagement, EntityManagementComplementHooks,
          RemoteDataSource, MemoryDataSource, SelectSelector) {
    
  var bookingItemCategory = {
     
       
    entityKey : function(entity) {
      return entity.code;
    },

    onEdit : function(entity) {
      $('#code').attr('code', true);
      $('#name').focus();
      $('#type').prop('disabled', 'true');
      this.configForm(entity);
    },
  
    onNew : function() {
      $('#code').focus();
      this.configForm(null);
      $('#create_category_calendar').bind('change', function() {
         if ($('#create_category_calendar').prop('checked')) {
           $('#calendar\\[id\\]').prop('disabled', true);
         }
         else {
           $('#calendar\\[id\\]').prop('disabled', false);
         }
       });
      $('#create_category_price').bind('change', function() {
         if ($('#create_category_price').prop('checked')) {
           $('#price_definition\\[id\\]').prop('disabled', true);
           $('#category_price').show();
         }
         else {
           $('#price_definition\\[id\\]').prop('disabled', false);
           $('#category_price').hide();
         }
      });
    },          

    configForm: function(entity) {

      
      var types = [
                   <% types.each do |type| %>
                   {
                     'id': '<%=type[:id]%>',
                     'description': '<%=type[:description]%>'
                   },
                   <% end %>
                  ];

      var typeDataSource= new MemoryDataSource(types);
      var typeValue = (entity && entity.type)?entity.type:null; 
      var typeSelector = new SelectSelector('type', typeDataSource, typeValue);   

      var catalogDataSource= new RemoteDataSource('/api/booking-catalogs',
          {'id':'code','description':'code'});
      var catalogValue = (entity && entity.booking_catalog_code)?entity.booking_catalog_code:null; 
      var catalogSelector = new SelectSelector('booking_catalog[code]', catalogDataSource, catalogValue, true);   

      var calendarDataSource= new RemoteDataSource('/api/calendars',
          {'id':'id','description':'name'});
      var calendarValue = (entity && entity.calendar_id)?entity.calendar_id:null; 
      var calendarSelector = new SelectSelector('calendar[id]', calendarDataSource, calendarValue, true);   

      var priceDefinitionDataSource= new RemoteDataSource('/api/rate-price-defs',
          {'id':'id','description':'name'});
      var priceDefinitionValue = (entity && entity.price_definition_id)?entity.price_definition_id:null; 
      var priceDefinitionSelector = new SelectSelector('price_definition[id]', priceDefinitionDataSource, priceDefinitionValue, true);   

      $('#stock_control').bind('change', function() {
         if ($(this).attr('checked')) {
           $('#stock_container').show();
         }
         else {
           $('#stock_container').hide();
         }
      });
    },

    adaptFormData : function(data) {
            
      if (data.calendar && data.calendar.id == '') {
        data.calendar = null;
      }

      switch (data.type) {
         case 1:
           data.type = 'category_of_resources';
           break;
         case 2:
           data.type = 'activity_or_show';
           break;         
         case 3:
           data.type = 'resource';
           break;         
      }

      if (data.booking_catalog && data.booking_catalog.code =='') {
        data.booking_catalog = null;
      }

      if (data.price_definition && data.price_definition.id == '') {
        data.price_definition = null;
      }

      if ($('#create_category_calendar').prop('checked')) {
        data.calendar = {'name' : data.code, 'description': data.name};
      }

      if ($('#stock_control').prop('checked')) {
        data.stock_control = true;
      }
      else {
        data.stock_control = false;
      }

      if ($('#active').prop('checked')) {
        data.active = true;
      }
      else {
        data.active = false;
      }


      return data;  
      
    }

  };

  var urls = { query_url  : '/api/booking-categories',
               create_url : '/api/booking-category',
               update_url : '/api/booking-category',
               delete_url : '/api/booking-category',
               get_url    : '/api/booking-category'
             };
  
  var hooks = [bookingItemCategory];
  
  // Add the complement hooks
  hooks = hooks.concat(EntityManagementComplementHooks.complements);
                 
  var contentsManager = new EntityManagement(urls, 'booking_category', <%= booking_category_page_size %>, hooks,
    {prefix: '/admin/booking'});

  
});