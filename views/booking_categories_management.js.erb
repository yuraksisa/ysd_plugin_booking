<%= partial('price_definition_creation.js'.to_sym) %>
require(["jquery", "YSDEntityManagement", "YSDEntityManagementComplementHooks",
         "YSDRemoteDataSource", "YSDMemoryDataSource", "YSDSelectSelector", 
         "jquery.ui", "YSDjson2"],
         function($, EntityManagement, EntityManagementComplementHooks,
          RemoteDataSource, MemoryDataSource, SelectSelector) {
    
  var bookingItemCategory = {
     
       
    entityKey : function(entity) {
      return entity.code;
    },

    onEdit : function(entity) {
      $('#code').attr('code', true);
      $('#name').focus();
      $('#type').prop('disabled', 'true');
      this.configForm(entity);

      $.ajax({url: '/admin/rates/prices/'+ entity.price_definition_id, dataType: 'text'}).done(function(html) {
        var dom = $('<html />').prop('innerHTML', html);
        $('#prices_container').html(dom.find('body #page_wrapper'));
        $('head').append(dom.find('script'));
      });

    },
  
    onNew : function() {
      $('#code').focus();
      this.configForm(null);
      $('#create_category_calendar').bind('change', function() {
         if ($('#create_category_calendar').prop('checked')) {
           $('#calendar\\[id\\]').prop('disabled', true);
         }
         else {
           $('#calendar\\[id\\]').prop('disabled', false);
         }
       });
    },          

    onRenderEntities: function() {

      $('.elements-search').show(); 
      
    },

    configForm: function(entity) {
      $('#calendar_container').empty();
      $("#content > div").hide(); // Initially hide all content
      $("#content_tabs li:first").attr("id","current"); // Activate first tab
      $("#content > div:first").fadeIn(); // Show first tab content
      $('#content_tabs a').click(function(e) {
        e.preventDefault();
        if ($(this).attr("name")=='calendar_tab') {
          if ($('#calendar_container').is(':empty')) {
            $.ajax({url: '/admin/calendar/events/'+entity.calendar_id, dataType: 'text'}).done(function(html) {
              var dom = $('<html />').prop('innerHTML', html);
              $('#calendar_container').html(dom.find('body #page_wrapper'));
              $('head').append(dom.find('script'));
              $('#calendar').fullCalendar('render');
            });
          }
        }
        if ($(this).attr("name") == 'preview') {
          ($('#home_frame')[0]).contentWindow.location.reload();
        }
        if ($(this).closest("li").attr("id") == "current"){ //detection for current tab
         return;       
        }
        else{             
          $("#content > div").hide(); //Hide all content
          $("#content_tabs li").attr("id",""); //Reset id's
          $(this).parent().attr("id","current"); // Activate this
          $('#' + $(this).attr('name')).fadeIn(); // Show content for current tab          
        }
      });

    },

    adaptFormData : function(data) {
            
      if (data.calendar && data.calendar.id == '') {
        data.calendar = null;
      }

      switch (data.type) {
         case 1:
           data.type = 'category_of_resources';
           break;
         case 2:
           data.type = 'activity_or_show';
           break;         
         case 3:
           data.type = 'resource';
           break;         
      }

      if (data.booking_catalog && data.booking_catalog.code =='') {
        data.booking_catalog = null;
      }

      if (data.create_calendar) {
        data.calendar = {'name' : data.code, 'description': data.name};
      }

      if ($('#stock_control').prop('checked')) {
        data.stock_control = true;
      }
      else {
        data.stock_control = false;
      }

      if ($('#active').length > 0) {
        if ($('#active').prop('checked')) {
          data.active = true;
        }
        else {
          data.active = false;
        }
      }


      return data;  
      
    }

  };

  var urls = { query_url  : '/api/booking-categories',
               create_url : '/api/booking-category',
               update_url : '/api/booking-category',
               delete_url : '/api/booking-category',
               get_url    : '/api/booking-category'
             };
  
  var hooks = [bookingItemCategory];
  
  // Add the complement hooks
  hooks = hooks.concat(EntityManagementComplementHooks.complements);
                 
  var contentsManager = new EntityManagement(urls, 'booking_category', <%= booking_category_page_size %>, hooks,
    {prefix: '/admin/booking',hold_form_after_action:true});  

  
});