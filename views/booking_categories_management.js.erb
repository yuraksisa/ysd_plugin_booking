<%= partial('price_definition_creation.js'.to_sym) %>
require(["jquery", "YSDEntityManagement", "YSDEntityManagementComplementHooks",
         "YSDRemoteDataSource", "YSDSelectSelector", "jquery.ui", "YSDjson2"],
         function($, EntityManagement, EntityManagementComplementHooks,
          RemoteDataSource, SelectSelector) {
    
  var bookingItemCategory = {
     
       
    entityKey : function(entity) {
      return entity.code;
    },

    onEdit : function(entity) {
      $('#code').attr('code', true);
      $('#name').focus();
      this.configForm(entity);
    },
  
    onNew : function() {
      $('#reference').focus();
      this.configForm(null);
      $('#create_category_calendar').bind('change', function() {
         if ($('#create_category_calendar').prop('checked')) {
           $('#calendar\\[id\\]').prop('disabled', true);
         }
         else {
           $('#calendar\\[id\\]').prop('disabled', false);
         }
       });
      $('#create_category_price').bind('change', function() {
         if ($('#create_category_price').prop('checked')) {
           $('#price_definition\\[id\\]').prop('disabled', true);
           $('#category_price').show();
         }
         else {
           $('#price_definition\\[id\\]').prop('disabled', false);
           $('#category_price').hide();
         }
      });
    },          

    configForm: function(entity) {
      var calendarDataSource= new RemoteDataSource('/api/calendars',
          {'id':'id','description':'name'});
      var calendarValue = (entity && entity.calendar_id)?entity.calendar_id:null; 
      var calendarSelector = new SelectSelector('calendar[id]', calendarDataSource, calendarValue, true);   

      var priceDefinitionDataSource= new RemoteDataSource('/api/rate-price-defs',
          {'id':'id','description':'name'});
      var priceDefinitionValue = (entity && entity.price_definition_id)?entity.price_definition_id:null; 
      var priceDefinitionSelector = new SelectSelector('price_definition[id]', priceDefinitionDataSource, priceDefinitionValue, true);   
    },

    adaptFormData : function(data) {
            
      if (data.calendar.id == '') {
        data.calendar = null;
      }

      if ($('#create_category_price').prop('checked')) {
        data.calendar = {'name' : data.code, 'description': data.name};
      }

/*
      if (data.price_definition.id == '') {
        if (!data.price_definition.type) {
          data.price_definition = null;
        }
        else {
          delete data.price_definition.id;
          data.price_definition.name = data.name;
          data.price_definition.description = data.name;          
        }
      }
*/

      return data;  
      
    }

  };

  var urls = { query_url  : '/api/booking-categories',
               create_url : '/api/booking-category',
               update_url : '/api/booking-category',
               delete_url : '/api/booking-category',
               get_url    : '/api/booking-category'
             };
  
  var hooks = [bookingItemCategory];
  
  // Add the complement hooks
  hooks = hooks.concat(EntityManagementComplementHooks.complements);
                 
  var contentsManager = new EntityManagement(urls, 'booking_category', 20, hooks,
    {prefix: '/admin/booking'});

  
});