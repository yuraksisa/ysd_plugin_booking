define('confirmedBooking', ['ysdtemplate', 'YSDFormatter', 'YSDEventTarget', 
       'jquery', 'jquery.formparams'], 
  function(tmpl, ysdFormatter, EventTarget, $) {

  confirmedBookingsModel = {

     data: [],
     hashData: {},
     filter: 'all',
     filterMonth: null,
     filterDay: null,
     filterResource: null,
     filterBookings: [],
     resources: {},
     allResources: [],
     events: new EventTarget(),

     addListener: function(type, listener) { /* addListener */
       this.events.addEventListener(type, listener); 
     },

     removeListener: function(type, listener) { /* removeListener */
       this.events.removeEventListener(type, listener);      
     },

     changeFilter: function(filter) {
       this.filter = filter;
       confirmedBookingsView.update('filter_changed');
     },

     setResources: function(data) {
        this.resources = data;
        for (var resource in this.resources) {
          if (this.resources[resource] instanceof Array) {
            for (var idx=0;idx<this.resources[resource].length;idx++) {
               this.allResources.push(this.resources[resource][idx]);
            }
          }
        }
        if (this.resources != {} && this.data.length > 0) {
          confirmedBookingsView.update('data_available');
        }
     },

     getBookings: function(month, year) {

       var url = '/api/booking/confirmed';
       if (month && year) {
         url += '?month='+month+'&year='+year;
       }

       $.ajax({
               type: 'GET',
               url : url,
               contentType: 'application/json; charset=utf-8',
               dataType : 'json',
               success: function(data, textStatus, jqXHR) {
                  confirmedBookingsModel.data = data;
                  confirmedBookingsModel.hashData = {};
                  if (data instanceof Array) {
                    for (var idx=0;idx<data.length;idx++) {
                      confirmedBookingsModel.hashData[data[idx].id] = data[idx];
                    }
                  }
                  if (confirmedBookingsModel.resources != {}) {
                    confirmedBookingsView.update('data_available');
                  }
              }
          });

     },

     filterDayResourceBookings: function(booking_item_reference, day, month, filtered_bookings) {
        
        this.filterResource = booking_item_reference;
        this.filterDay = day;
        this.filterMonth = month;
        this.filterBookings = filtered_bookings;
        this.changeFilter('day-resource');
     },

     assignBooking: function(booking_id, booking_resource_index, id, reference_code, isReassigned) {

       var url = '/api/booking/assign/'+id+'/'+reference_code;
       var self = this;

       $.ajax({
               type: 'POST',
               url : url,
               contentType: 'application/json; charset=utf-8',
               dataType : 'json',
               success: function(data, textStatus, jqXHR) {
                 if (!isReassigned) {
                   $('button.assign_button[rel="'+id+'"]').unbind('click');               
                   var buttons = $('button.assign_button[rel="'+id+'"]');
                   buttons.removeClass('assign_button green-button');
                   buttons.addClass("reassign_button blue-button");
                   buttons.html('<%=t.not_assigned_bookings.form.reassign%>');
                   buttons.bind('click', function() {
                         confirmedBookingsController.reAssignButtonClick($(this)[0]);                        
                       });
                   var select = "select[name=\"booking_item_reference\"][rel='" + id + "']";
                   var option =  select + " option[value='null']"; 
                   $(option).remove();
                 }
                 confirmedBookingsModel.hashData[booking_id].
                   booking_line_resources[booking_resource_index].
                   booking_item_reference = reference_code;                 
                 self.events.fireEvent({'type':'booking_assigned', data: {
                     id: id, 
                     booking_resource_index: booking_resource_index,
                     resource: reference_code, 
                     reassigned: isReassigned, 
                     booking: confirmedBookingsModel.hashData[booking_id]}});
                 alert('Recurso asignado')
               },
               error: function(data, textStatus, jqXHR) {
                 alert('Error updating');
               }
          });

     },

     updatePlanningColor: function(formParams) {

       var self = this;
       var booking_id = formParams.id;
       var strData = JSON.stringify(formParams);

       $.ajax({
               type: 'PUT',
               url : '/api/booking',
               contentType: 'application/json; charset=utf-8',
               data: strData,
               dataType : 'json',
               success: function(data, textStatus, jqXHR) {
                 confirmedBookingsModel.hashData[booking_id].
                   planning_color = formParams['planning_color'];                 
                 self.events.fireEvent({'type':'booking_updated', data: {
                     id: booking_id, 
                     booking: confirmedBookingsModel.hashData[booking_id]}});
                 alert('Color actualizado');
               },
               error: function(jqXHR, textStatus, errorThrow){ /* RESPONSE ERROR */
                 alert('Error'); 
               }
             });
     }


  };

  confirmedBookingsController = {

    assignButtonClick: function(control) {
       if ($(control.form['booking_item_reference']).val() == 'null') {
         alert('Seleccione el recurso a asignar');
         return;
       }
       var id = $(control.form['id']).val();
       var booking_id = $(control.form['booking_id']).val();
       var booking_resource_index = parseInt($(control.form['booking_resource_idx']).val());
       var reference_code = $(control.form['booking_item_reference']).val();
       confirmedBookingsModel.assignBooking(booking_id, booking_resource_index, id, reference_code, false);
    },

    reAssignButtonClick: function(control) {
       var id = $(control.form['id']).val();
       var booking_id = $(control.form['booking_id']).val();
       var booking_resource_index = parseInt($(control.form['booking_resource_idx']).val());
       var reference_code = $(control.form['booking_item_reference']).val();
       confirmedBookingsModel.assignBooking(booking_id, booking_resource_index, id, reference_code, true);
    },

    showAllResourcesChanged: function(control) {

       var id = $(control).attr('rel');
       var booking_id = $(control).attr('data-bookingid');
       var booking_resource_index = parseInt($(control).attr('data-bookingresourceidx'));

       // Adjust the selector to show the assigned resource
       var booking = confirmedBookingsModel.hashData[booking_id];
       if (booking.booking_line_resources[booking_resource_index]) {
          var booking_line_resource = booking.booking_line_resources[booking_resource_index];
          if (booking_line_resource.booking_item_reference != null) {          
            var select = "#filtered_resources_" + booking_line_resource.id + " " +
                       "select[name=\"booking_item_reference\"][rel='" + booking_line_resource.id + "']";
            var selector =  select + " option[value='" + booking_line_resource.booking_item_reference + "']"; 
            if ($(selector).length == 0) {
              $(select).append("<option value=\"" +
                booking_line_resource.booking_item_reference + "\" selected=\"selected\">" + 
                booking_line_resource.booking_item_reference + "</option>");
            }
          
            select = "#not_filtered_resources_" + booking_line_resource.id + " " +
                   "select[name=\"booking_item_reference\"][rel='" + booking_line_resource.id + "']";
            selector =  select + " option[value='" + booking_line_resource.booking_item_reference + "']"; 
            if ($(selector).length == 0) {
              $(select).append("<option value=\"" +
                booking_line_resource.booking_item_reference + "\" selected=\"selected\">" + 
                booking_line_resource.booking_item_reference + "</option>");
            }
            else {
              $(select).val(booking_line_resource.booking_item_reference);
            }
          }
       }
       if ($(control).attr('checked')) {
         $('#filtered_resources_'+id).hide();        
         $('#not_filtered_resources_'+id).show();
       }
       else {
         $('#filtered_resources_'+id).show();        
         $('#not_filtered_resources_'+id).hide();        
       }
    },

    planningColorChanged: function(control) {
      confirmedBookingsModel.updatePlanningColor($(control.form).formParams(false));
    },

    stockShowClick: function(control) {
      var id = $(control).attr('rel');
      $('#stock_items_'+id).toggle();
      if ($('#stock_items_'+id).is(':visible')) {
        $(control).html('<%= t.not_assigned_bookings.table.hide_stock %>');
      }
      else {
        $(control).html('<%= t.not_assigned_bookings.table.show_stock %>');
      }      
    }

  };

  confirmedBookingsView = {

    init: function() {
    },

    update: function(event) {

      switch (event) {
        case 'data_available':
          this.loadBookings();
          break;
        case 'filter_changed':
          this.loadBookings();
          alert('Reservas filtradas');
          $('html, body').animate({
             scrollTop: $("#booking_list").offset().top
            }, 2000);
          break;
      }
    },

    loadBookings: function() {
          var template = tmpl('script_booking_line');
          var result = '';
          $('.show_all_resources').unbind('change');
          $('.planning_color').unbind('change');
          for (var i=0;i<confirmedBookingsModel.data.length;i++) {
             if (confirmedBookingsModel.filter == 'all' || 
                 (confirmedBookingsModel.filterBookings instanceof Array &&
                 confirmedBookingsModel.filterBookings.indexOf(confirmedBookingsModel.data[i].id)>-1)) {
               result += template({entity: confirmedBookingsModel.data[i], 
                  resources: confirmedBookingsModel.resources,
                  allResources: confirmedBookingsModel.allResources,
                  formatter: ysdFormatter});
             }
          }
          $('#elements_tbody').html(result);       
          $('.assign_button').unbind('click');
          $('.assign_button').bind('click', function() {
            confirmedBookingsController.assignButtonClick($(this)[0]);
          });          
          $('.reassign_button').bind('click', function() {
            confirmedBookingsController.reAssignButtonClick($(this)[0]);
          });           
          $('.show_all_resources').bind('change', function() {
            confirmedBookingsController.showAllResourcesChanged($(this)[0]);
          });          
          $('.planning_color').bind('change', function() {
            confirmedBookingsController.planningColorChanged($(this)[0]);
          });
          $('.stock_show').bind('click', function(event) {
            confirmedBookingsController.stockShowClick($(this)[0]);
          })

    }

  };

  confirmedBookings = {
      model: confirmedBookingsModel,
      controller: confirmedBookingsController,
      view: confirmedBookingsView
  }

  confirmedBookingsView.init();

  return confirmedBookings;
});