require(["jquery", "YSDEntityManagement", "YSDEntityManagementComplementHooks",
         "YSDRemoteDataSource", "YSDMemoryDataSource", "YSDSelectSelector", "jquery.ui", "YSDjson2"],
         function($, EntityManagement, EntityManagementComplementHooks,
          RemoteDataSource, MemoryDataSource, SelectSelector) {
    
  var booking = {
     
       
    entityKey : function(entity) {
      return entity.id;
    },

    onEdit : function(entity) {
      this.configForm(entity);
    },
  
    onNew : function() {
      this.configForm(null);
    },          

    onRenderEntities : function(entities) {
      $('.elements-search').show(); 
      $('.new-entity-button').hide();
    },

    configForm: function(entity) {
      $('.delete-entity-button').hide();
      $("#content > div").hide(); // Initially hide all content
      $("#content_tabs li:first").attr("id","current"); // Activate first tab
      $("#content > div:first").fadeIn(); // Show first tab content
      $('#content_tabs a').click(function(e) {
        e.preventDefault();
        if ($(this).attr("name") == 'preview') {
          ($('#home_frame')[0]).contentWindow.location.reload();
        }
        if ($(this).closest("li").attr("id") == "current"){ //detection for current tab
         return;       
        }
        else{             
          $("#content > div").hide(); //Hide all content
          $("#content_tabs li").attr("id",""); //Reset id's
          $(this).parent().attr("id","current"); // Activate this
          $('#' + $(this).attr('name')).fadeIn(); // Show content for current tab
        }
      });      
    },

    adaptFormData : function(data) {

      return data;  
      
    },

    statusDescription : {
       'pending_confirmation' : '<%= t.booking_status.pending_confirmation%>',
       'confirmed' : '<%= t.booking_status.confirmed%>',
       'in_progress' : '<%= t.booking_status.in_progress%>',
       'done' : '<%= t.booking_status.done%>',
       'cancelled' : '<%= t.booking_status.cancelled%>'
    },
    
    statusClass : function(entity) {
      var className = null;
      switch (entity.status) {
        case 'pending_confirmation' :
          className = 'pending-status';
          break;
        case 'confirmed':
          className = 'confirmed-status';
          break;
        case 'in_progress':
          className = 'doing-status';
          break;
        case 'done':
          className = 'done-status';
          break;
        case 'cancelled':
          className = 'error-status';
          break;          
      }
      return className;
    }    


  };

  var urls = { 
               query_url  : '/api/bookings',
               get_url : '/api/booking',
               update_url: '/api/booking'
             };
  
  var bookingHook = [booking];
  var bookingManager = new EntityManagement(urls, 'bookings', 
    <%=bookings_page_size%>, bookingHook,
     {prefix: '/admin/simple/booking', hold_form_after_action:true});
 
  
});