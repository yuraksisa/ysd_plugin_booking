  <% if defined?booking_js %>
    <%= booking_js %>
  <% end %>
  require(['jquery', 'YSDForms', 'YSDDateControl', 'ysdtemplate',
  	       <% if defined?booking_js %>'booking_js'<% else %>'/js/booking.js'<%end%>, 
           'YSDListSelector', 'YSDRemoteDataSource', 'json2', 'jquery.validate', 
  	       'jquery.placeholder', 'jquery.ui', 'jquery.ui.datepicker-es', 
  	       'jquery.ui.datepicker.validation',
  	       'jquery.tools', 'jquery.formparams', 'datejs', 'autonumeric'], 
  	       function($, YSDForms, DateControl, tmpl, bookingDataSystem,  
  	       ListSelector, RemoteDataSource) {  
  
  bookingEditModel = {

        exceeded_hours: 2,
        
        all_prices: null,

        booking : {

          date_from: $.datepicker.parseDate("dd/mm/yy", "<%= booking.date_from.strftime('%d/%m/%y')%>"),
          time_from: '<%=booking.time_from%>',
          date_to: $.datepicker.parseDate("dd/mm/yy", "<%= booking.date_to.strftime('%d/%m/%y')%>"),
          time_to: '<%=booking.time_to%>',
          pickup_place: '<%=booking.pickup_place%>',
          return_place: '<%=booking.return_place%>',
          days: <%=booking.days%>,
          date_to_price_calculation: $.datepicker.parseDate("dd/mm/yy", "<%= booking.date_to_price_calculation.strftime('%d/%m/%y')%>"),
          item_cost: <%=booking.item_cost%>,
          extras_cost: <%=booking.extras_cost%>,
          total_cost: <%=booking.total_cost%>,
          total_paid: <%=booking.total_paid%>,
          total_pending: <%=booking.total_pending%>,
          booking_lines: [
            <% booking.booking_lines.each do |item| %>
              {'id':<%=item.id%>, 'item_id':'<%=item.item_id%>', 'item_description':'<%=item.item_description%>',
               'item_unit_cost':new Number(<%=item.item_unit_cost%>), 'item_cost':new Number(<%=item.item_cost%>),
               'quantity':new Number(<%=item.quantity%>)
              },      
            <% end %>                    
          ],
          booking_extras: [
            <% booking.booking_extras.each do |extra| %>
              {'id':<%=extra.id%>, 'extra_id':'<%=extra.extra_id%>', 'extra_description':'<%=extra.extra_description%>',
               'extra_unit_cost':new Number(<%=extra.extra_unit_cost%>), 'extra_cost':new Number(<%=extra.extra_cost%>),
               'quantity':new Number(<%=extra.quantity%>)
              },
            <% end %>
          ]

        },

     
        update: function() {

        	 var request = JSON.stringify(this.booking);

             $.ajax( 
       	         {
       	           type : 'PUT',
       	           url :  '/api/booking/<%=booking.id%>/price', 
       	           data : request,
                   dataType: 'json', 
                   contentType: 'application/json; charset=utf-8', /* Data type sent to the server */
       	                  	           
       	           success : function(data, textStatus, jqXHR) { /* RESPONSE OK */
       	           	 location.href="/admin/booking/bookings/<%=booking.id%>"
       	           },	
       	           
       	           error: function(jqXHR, textStatus, errorThrow){ /* RESPONSE ERROR */
       	           	 alert('Error'); 
       	           }
       	           
       	         });       
       	

        },

        calculatePrice : function(date_from, time_from, date_to, time_to, pickup_place, return_place) {
       	
       	  this.booking.date_from = new Date(Date.UTC(date_from.getFullYear(), date_from.getMonth(), date_from.getDate(), date_from.getHours(), date_from.getMinutes(), date_from.getSeconds()));
       	  this.booking.time_from = time_from;
       	 
       	  this.booking.date_to = new Date(Date.UTC(date_to.getFullYear(), date_to.getMonth(), date_to.getDate(), date_to.getHours(), date_to.getMinutes(), date_to.getSeconds()));;
       	  this.booking.time_to = time_to;

       	  this.booking.pickup_place = pickup_place;
       	  this.booking.return_place = return_place;
       	        	 
       	  var _date_from = new Date( date_from.toString("MM/dd/yyyy ") + time_from);
       	  var _date_to = new Date( date_to.toString("MM/dd/yyyy ") + time_to);
       	        	 
       	  var dias_diferencia = Math.round((date_to - date_from) / (1000*60*60*24));
       	  var horas_diferencia = Math.round((_date_to - _date_from) / (1000*60*60));
       	 
       	  this.booking.days = Math.max(Math.floor(dias_diferencia),0);
       	  this.booking.date_to_price_calculation = new Date(this.booking.date_to.getTime());
       	 
       	  if (this.exceeded_hours > 0 && (horas_diferencia/24 > dias_diferencia + this.exceeded_hours/24) ) {
       	    this.booking.date_to_price_calculation.add( {days:1});
       	    this.booking.days++;
       	  }

       	  this.all_prices = bookingDataSystem.calculate_items_price(this.booking.date_from, 
       	                                                            this.booking.date_to_price_calculation);
       	  
          this.booking.item_cost = 0;
          this.booking.extras_cost = 0;
          for (var i=0;i<this.booking.booking_lines.length;i++) {
            this.booking.booking_lines[i].item_unit_cost = this.all_prices[this.booking.booking_lines[i].item_id] || 0;
            this.booking.booking_lines[i].item_cost = this.booking.booking_lines[i].item_unit_cost * this.booking.booking_lines[i].quantity;
            this.booking.item_cost += this.booking.booking_lines[i].item_cost;  
          }
       	  for (var i=0;i<this.booking.booking_extras.length;i++) {
       	  	 this.booking.booking_extras[i].extra_unit_cost = bookingDataSystem.calculate_extra_price(this.booking.date_from, 
              this.booking.date_to_price_calculation, this.booking.booking_extras[i].extra_id); 
       	  	 this.booking.booking_extras[i].extra_cost = this.booking.booking_extras[i].extra_unit_cost * this.booking.booking_extras[i].quantity;       	  	 
       	     this.booking.extras_cost += this.booking.booking_extras[i].extra_cost;
       	  }
       	  this.booking.total_cost = this.booking.item_cost + this.booking.extras_cost;
          this.booking.total_pending = this.booking.total_cost - this.booking.total_paid;

       	  bookingEditView.showNewPrices();
          $('.price').autoNumeric('init',{aSep:''});
       	  $('#situation_change').fadeIn();
          $('#update_button').show();
       	       	       	
       },  

       updateItemPrice: function(index, value) {
          var oldValue = this.booking.booking_lines[index].item_cost;
          this.booking.booking_lines[index].item_unit_cost = value;
          this.booking.booking_lines[index].item_cost = value * this.booking.booking_lines[index].quantity;

          this.booking.item_cost = this.booking.item_cost - oldValue + this.booking.booking_lines[index].item_cost;

          this.booking.total_cost = this.booking.item_cost + this.booking.extras_cost;
          this.booking.total_pending = this.booking.total_cost - this.booking.total_paid;
          bookingEditView.showNewPrices();
       },

       updateExtraCost: function(index, value) {
          var oldValue = this.booking.booking_extras[index].extra_cost;
       	  this.booking.booking_extras[index].extra_unit_cost = value;
       	  this.booking.booking_extras[index].extra_cost = value * this.booking.booking_extras[index].quantity;

          this.booking.extras_cost = this.booking.extras_cost - oldValue + this.booking.booking_extras[index].extra_cost;

          this.booking.total_cost = this.booking.item_cost + this.booking.extras_cost;
          this.booking.total_pending = this.booking.total_cost - this.booking.total_paid;
          bookingEditView.showNewPrices();       	
       },

       updatePickupPlace: function(pickupPlace) {
        
          this.booking.pickup_place = pickupPlace;
          bookingEditView.showNewPrices(); 
          $('#situation_change').fadeIn();
          $('#update_button').show();

       },

       updateReturnPlace: function(returnPlace) {
          this.booking.return_place = returnPlace;
          bookingEditView.showNewPrices(); 
          $('#situation_change').fadeIn();
          $('#update_button').show();
       }



  }

  bookingEditController = { 

     dateFromChanged: function() {
       bookingEditModel.calculatePrice($('#date_from').datepicker("getDate"), 
                                       $('#time_from').val(),
                                       $('#date_to').datepicker("getDate"), 
                                       $('#time_to').val(),
                                       $('#pickup_place_value').val(),
                                       $('#return_place_value').val());
     },

     dateToChanged: function() {
        bookingEditModel.calculatePrice($('#date_from').datepicker("getDate"), 
                                        $('#time_from').val(),
                                        $('#date_to').datepicker("getDate"), 
                                        $('#time_to').val(),
                                        $('#pickup_place_value').val(),
                                        $('#return_place_value').val());
     },

     itemCostBlur: function(index, value) {
      bookingEditModel.updateItemPrice(index, value);
     },

     extraCostBlur: function(index, value) {
     	bookingEditModel.updateExtraCost(index, value);
     },

     update: function() {
     	bookingEditModel.update();
     },

     change_pickup_place_select : function(pickup_place) { /* change pickup place */
        
        if ($('#pickup_place :selected').val() == '<%=t.new_booking.other%>' ) {
          $('#other_pickup_place').show();  
          $('#pickup_place_value').val('');
          $('#pickup_place_other').focus();
        } 
        else
        {
          $('#other_pickup_place').hide();
          $('#pickup_place_other').val(''); 
          $('#pickup_place_value').val(pickup_place);
        }

        bookingEditModel.updatePickupPlace($('#pickup_place_value').val());
        
     },
      
     blur_pickup_place_input : function(pickup_place) {
      
        if ($('#pickup_place_other').val() != $('#pickup_place_value').val()) {
          $('#pickup_place_value').val(pickup_place);
          bookingEditModel.updatePickupPlace(pickup_place);
        }
                
     },
     
     change_return_place_select : function(return_place) { /* change return place */
        
        if ($('#return_place :selected').val() == '<%=t.new_booking.other%>'  ) {
          $('#other_return_place').show();
          $('#return_place_value').val('');   
          $('#return_place_other').focus();
        } 
        else
        {
          $('#other_return_place').hide();
          $('#return_place_other').val(''); 
          $('#return_place_value').val(return_place);
        }          

        bookingEditModel.updateReturnPlace($('#return_place_value').val());

     },
      
     blur_return_place_input : function(return_place) {
        
        if ($('#return_place_other').val() != $('return_place_value').val()) {
          $('return_place_value').val(return_place);
          bookingEditModel.updateReturnPlace(return_place);        
        }
        
     }

  }

  bookingEditView = {

    init : function() {

      $.datepicker.setDefaults( $.datepicker.regional["<%=session[:locale] || 'es'%>" ] );

      $('#date_from').datepicker({numberOfMonths:2, dateFormat: 'dd/mm/yy'}, "<%=session[:locale] || 'es'%>" );
      $('#date_to').datepicker({numberOfMonths:2, dateFormat: 'dd/mm/yy'}, "<%=session[:locale] || 'es'%>" );
      $('#date_from').datepicker("setDate", $.datepicker.parseDate("dd/mm/yy", "<%= booking.date_from.strftime('%d/%m/%y')%>")); 
      $('#date_to').datepicker("setDate", $.datepicker.parseDate("dd/mm/yy", "<%= booking.date_to.strftime('%d/%m/%y')%>"));

      $('#date_from').bind('change', function() {
         bookingEditController.dateFromChanged();
      });
      $('#time_from').bind('change', function(){
      	 bookingEditController.dateFromChanged();
      })
      $('#date_to').bind('change', function() {
         bookingEditController.dateToChanged();
      });
      $('#time_to').bind('change', function() {
      	 bookingEditController.dateToChanged();
      });
      $('#update_button').bind('click', function() {
         bookingEditController.update();
      });
      $('#pickup_place').bind('change',
          function() {
             bookingEditController.change_pickup_place_select($('#pickup_place option:selected').text());
          });
      $('#pickup_place_other').bind('blur',
          function() {
             bookingEditController.blur_pickup_place_input($(this).val());
          });
      $('#pickup_place_value').val('<%=booking.pickup_place%>');  
           
      $('#return_place').bind('change',
          function() {
             bookingEditController.change_return_place_select($('#return_place option:selected').text());
          });
      $('#return_place_other').bind('blur',
          function() {
            bookingEditController.blur_return_place_input($(this).val());
          });
      $('#return_place_value').val('<%=booking.return_place%>');  


      // Add the new options
      var comboItems = document.getElementById('pickup_place');
      if (comboItems) {
        for (var pickup_place_id in bookingDataSystem.pickup_places)
        {
          var optionItem = document.createElement('option');
          optionItem.setAttribute('value', pickup_place_id);	
          if (pickup_place_id == bookingEditModel.booking.pickup_place) {
            optionItem.setAttribute('selected', 'selected');
          }
          optionItem.text = optionItem.innerText = bookingDataSystem.pickup_places[pickup_place_id];
          comboItems.appendChild(optionItem);
        }
        <% if booking_allow_custom_pickup_return_place %>
        var optionItem = document.createElement('option');
        optionItem.setAttribute('value', '<%=t.new_booking.other%>');  
        optionItem.text = optionItem.innerText = '<%=t.new_booking.other%>';
        comboItems.appendChild(optionItem);    
        <% end %>  
      }

      // Add the new options
      comboItems = document.getElementById('return_place');
      if (comboItems) {
        for (var return_place_id in bookingDataSystem.return_places)
        {
          var optionItem = document.createElement('option');
          optionItem.setAttribute('value', return_place_id);	
          if (return_place_id == bookingEditModel.booking.return_place) {
            optionItem.setAttribute('selected', 'selected');
          }          
          optionItem.text = optionItem.innerText = bookingDataSystem.return_places[return_place_id];
          comboItems.appendChild(optionItem);
        }

        <% if booking_allow_custom_pickup_return_place %>
        var optionItem = document.createElement('option');
        optionItem.setAttribute('value', '<%=t.new_booking.other%>');  
        optionItem.text = optionItem.innerText = '<%=t.new_booking.other%>';
        comboItems.appendChild(optionItem);    
        <% end %>  
      }
      bookingEditView.loadExtras();
    },

    loadExtras: function() {
    	$('#extras').html(tmpl('script_extras', {booking: bookingEditModel.booking}));
    },

    showNewPrices: function() {

      $('#new_prices').html(tmpl('script_new_extras', {booking: bookingEditModel.booking}));  
      $('.extra-cost').bind('blur', function(event) {
           bookingEditController.extraCostBlur($(event.currentTarget).attr('rel'), $(event.currentTarget).val());
      }); 
    	$('.item_cost').bind('blur', function(event) {
    		bookingEditController.itemCostBlur($(event.currentTarget).attr('rel'), $(event.currentTarget).val());
    	});
    }

  }

  bookingEditView.init();

});