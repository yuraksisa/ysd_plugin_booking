require(['jquery','ysdtemplate', 'YSDEventTarget', 'jquery.formparams','jquery.toast'],
    function($,tmpl, EventTarget) {
        rentalStoragesModel = {
            data: null,
            deletedId: null,
            events: new EventTarget(),
            addListener: function(type, listener) {
                this.events.addEventListener(type, listener);
            },
            removeListener: function(type, listener) {
                this.events.removeEventListener(type, listener);
            },
            add: function() {
                var request = $('form[name=new_rental_storage]').formParams();
                var requestJSON = JSON.stringify(request);
                var url = '/api/booking-rental-storage';
                $.ajax({
                    type: 'POST',
                    data : requestJSON,
                    url : url,
                    success: function(data, textStatus, jqXHR) {
                        rentalStoragesModel.data = data;
                        rentalStoragesModel.events.fireEvent({type: 'created_storage', data: data});
                        rentalStoragesView.update('added');
                        $.toast({
                            heading: 'Almacén creado',
                            text: 'Almacén creado con éxito',
                            position: 'top-right',
                            bgColor: 'rgb(56, 154, 56)',
                            textColor: 'white',
                            loader: false,
                            stack: false
                        });
                    },
                    error: function(data, textStatus, jqXHR) {
                        alert('Error creando almacén');
                    }
                });
            },
            update: function(form) {
                var request = $(form).formParams();
                var url = '/api/booking-rental-storage';
                var requestJSON = JSON.stringify(request);
                $.ajax({
                    type: 'PUT',
                    data : requestJSON,
                    url : url,
                    success: function(data, textStatus, jqXHR) {
                        rentalStoragesModel.data = data;
                        rentalStoragesModel.events.fireEvent({type: 'updated_storage', data: data});
                        rentalStoragesView.update('updated');
                        $.toast({
                            heading: 'Almacén actualizado',
                            text: 'Almacén actualizado con éxito',
                            position: 'top-right',
                            bgColor: 'rgb(56, 154, 56)',
                            textColor: 'white',
                            loader: false,
                            stack: false
                        });
                    },
                    error: function(data, textStatus, jqXHR) {
                        alert('Error actualizando almacén');
                    }
                });
            },
            delete: function(form) {
                var request = $(form).formParams();
                var url = '/api/booking-rental-storage';
                var requestJSON = JSON.stringify(request);
                rentalStoragesModel.deletedId = request['id'];                
                $.ajax({
                    type: 'DELETE',
                    data : requestJSON,
                    url : url,
                    success: function(data, textStatus, jqXHR) {
                        rentalStoragesModel.data = data;
                        rentalStoragesModel.events.fireEvent({type: 'deleted_storage', data: rentalStoragesModel.deletedId});
                        rentalStoragesView.update('deleted');
                        $.toast({
                            heading: 'Almacén eliminado',
                            text: 'Almacén eliminado con éxito',
                            position: 'top-right',
                            bgColor: 'rgb(56, 154, 56)',
                            textColor: 'white',
                            loader: false,
                            stack: false
                        });
                    },
                    error: function(data, textStatus, jqXHR) {
                        alert('Error eliminando almacén');
                    }
                });
            }
        };
        rentalStoragesController = {
            updateBtnClick: function(form) {
                rentalStoragesModel.update(form);
            },
            deleteBtnClick: function(form) {
                if (confirm('<%=t.booking_rental_storages_management.table.confirm_delete%>')) {
                    rentalStoragesModel.delete(form);
                }
            },
            createBtnClick: function() {
                rentalStoragesModel.add();
            },
            addressBtnClick: function(id) {
                /*
                $.ajax({url: '/admin/booking/translate/pickup-return-place/' + id, dataType: 'text'}).done(function(html) {
                    var dom = $('<html />').prop('innerHTML', html);
                    $('#pickup_return_place_translation_modal .modal-body').html(dom.find('body #page_wrapper'));
                    // The translation appends two scripts, the first step is to remove them before add another element
                    $('head #booking_pickup_return_place_translation_template_form').next().remove();
                    $('head #booking_pickup_return_place_translation_template_form').remove();
                    $('head').append(dom.find('script:not([src])'));
                    $('#pickup_return_place_translation_modal').modal('show');
                });
                 */
            }
        };
        rentalStoragesView = {

            init: function() {
                this.setupEvents();
            },

            setupEvents: function() {
                this.setupEditionButtons();
                $('#create_rental_storage_btn').bind('click', function(){
                    rentalStoragesController.createBtnClick();
                });
            },

            setupEditionButtons: function() {
                $('.update_rental_storage_btn').unbind('click');
                $('.update_rental_storage_btn').bind('click', function(){
                    rentalStoragesController.updateBtnClick($(this)[0].form);
                });

                $('.delete_rental_storage_btn').unbind('click');
                $('.delete_rental_storage_btn').bind('click', function(){
                    rentalStoragesController.deleteBtnClick($(this)[0].form);
                });

                /*
                $('.translate_pickup_place_btn').unbind('click');
                $('.translate_pickup_place_btn').bind('click', function(){
                    pickupReturnPlaceDefinitionEditionController.translateBtnClick($(this).attr('data-pickup-place-id'));
                });
                */


            },

            refresh: function() {

                var html = tmpl('rental_storage_script')({rental_storage: rentalStoragesModel.data});
                $('#rental_storages_table tr.pickup_return_place').remove();
                $('#rental_storages_table tbody tr:last').before(html);
                this.setupEditionButtons();

            },

            update: function(action) {
                switch (action) {
                    case 'added':
                        this.refresh();
                        $('form[name=new_rental_storage]')[0].reset();
                        break;
                    case 'updated':
                        break;
                    case 'deleted':
                        $('#update_rental_storage_'+rentalStoragesModel.deletedId).parent().parent().remove();
                        break;
                }
            }

        };

        rentalStoragesView.init();

    });
