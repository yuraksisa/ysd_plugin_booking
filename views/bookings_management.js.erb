require(['jquery', 'YSDEntityManagement','YSDRemoteDataSource', 'YSDSelectSelector', 
         'YSDForms', 'ysdtemplate', 'YSDGui',
         'jquery.ui', 'jquery.ui.datepicker-es', 'jquery.ui.datepicker.validation',
         'jquery.formparams', 'jquery.ui.timepicker','autonumeric' ],
    function($, EntityManagement, RemoteDataSource, SelectSelector, YSDForms, tmpl,
         YSDGui) {

 
  function BookingHook() {

    this.statusDescription = {
       'pending_confirmation' : '<%= t.booking_status.pending_confirmation%>',
       'confirmed' : '<%= t.booking_status.confirmed%>',
       'in_progress' : '<%= t.booking_status.in_progress%>',
       'done' : '<%= t.booking_status.done%>',
       'cancelled' : '<%= t.booking_status.cancelled%>'
    }
 	   
    this.paymentStatusDescription = {
       'none' : '<%= t.booking_payment_status.none%>',
       'deposit' : '<%= t.booking_payment_status.deposit%>',
       'total' : '<%= t.booking_payment_status.total%>'
    }

    this.chargeStatusDescription = {
       'pending': '<%= t.charge_status.pending %>',
       'processing': '<%= t.charge_status.processing %>',
       'done': '<%= t.charge_status.done %>',
       'denied': '<%= t.charge_status.denied %>'
    };

    this.entityKey = function(entity) {
      return entity.id;
    }    
  	
    this.onRenderEntities = function(entities) {
      $('.elements-search').show(); 
      $('.new-entity-button').hide();
    }

    this.onEdit = function(entity) {

       this.configForm(entity);
       
       $.datepicker.setDefaults( $.datepicker.regional["<%=session[:locale] || 'es'%>" ] );

       $('#driver_date_of_birth').datepicker({numberOfMonths:1, dateFormat: 'dd/mm/yy'}, "<%=session[:locale] || 'es'%>" );
       $('#driver_date_of_birth').datepicker("setDate", $.datepicker.parseDate("dd/mm/yy", bookingManager.view.formatDate(entity.driver_date_of_birth, 'dd/MM/yyyy')));
       $('#driver_driving_license_date').datepicker({numberOfMonths:1, dateFormat: 'dd/mm/yy'}, "<%=session[:locale] || 'es'%>" );
       $('#driver_driving_license_date').datepicker("setDate", $.datepicker.parseDate("dd/mm/yy", bookingManager.view.formatDate(entity.driver_driving_license_date, 'dd/MM/yyyy')));
       
       var dataSourceModel = new RemoteDataSource('/api/booking-items',{'id':'reference','description':'reference'});
       var valueModel = (entity != null && entity.booking_item != null) ? entity.booking_item.reference : null; 
       var selectorModel = new SelectSelector('booking_item_reference', dataSourceModel, valueModel, true );

       $.ajax({
               type: 'GET',
               url : '/api/bookings/linked/'+entity.id,
               contentType: 'application/json; charset=utf-8',
               dataType : 'json',
               success: function(data, textStatus, jqXHR) {
                 if (data.length > 1) {
                   $("#linked_bookings").html(tmpl('linked_bookings_script', {data: data}));
                   if ($('#link_booking').is(':visible')) {                 
                     $('#link_booking').hide();
                   }
                 }
                 else {
                   $('#linked_bookings').html('<div class="all-space"><%=t.booking_management.form.booking_single_text%></div>');
                 }
               }
              });       

       $('#booking_item_reference').bind('change', function() {
         var url = '/api/booking/assign/' + entity.id + '/' + encodeURIComponent($('#booking_item_reference').val());
         $('#assign_item_button').attr('data-action-url', url);
       });

       $('#link_booking').bind('click', function() {
           $('#main_booking_form').show();
           $('#link_booking').hide();
           $("#search_main_booking").autocomplete({
             source: "/api/bookings/main-search/"+entity.id,
             minLength: 1,
             select: function( event, ui ) {
               if (ui.item && ui.item.value) {
                 $('#main_booking_id').val(ui.item.value);
                 $('#display_selected_booking').html(ui.item.label);
                 $('#display_selected_booking_container').show();
                 $('#link_booking_bar').show();
               }
              }
           });
       });

      var self = this;
      $('.resource_user_name').bind('blur', function() {
        self.updateLineResource($(this)[0]);
      });
      $('.resource_user_surname').bind('blur', function() {
        self.updateLineResource($(this)[0]);
      });
      $('.customer_height').bind('change', function() {
        self.updateLineResource($(this)[0]);
      });
      $('.customer_weight').bind('change', function() {
        self.updateLineResource($(this)[0]);
      });
      $('#new_charge').bind('click', function(){
        $('#new_charge_button').unbind('click');
        $('#date').datetimepicker(
            {controlType: 'select', showTimezone: false, useLocalTimezone: true, 
             numberOfMonths:1, dateFormat: 'dd/mm/yy'},
            '<%= session[:locale] %>');
        $('#date').datetimepicker('setDate', new Date());
        $('#amount').autoNumeric('init',{aSep:''});
        $('#new_charge_button').bind('click', function(){
           var formdata = $('form[name="charge"]').formParams(true);
           var json_request = JSON.stringify(formdata);
           $.ajax({
               type: 'POST',
               data : json_request,
               url : '/api/booking/charge',
               success: function(data, textStatus, jqXHR) {
                 bookingManager.model.synchronizeCurrentEntity(data);
                 bookingManager.model.change_state('entity_updated_successfully');
                 alert('<%=t.booking_management.charge_form.done%>');
                 $('form[name="charge"]').hide();
               },
               error: function(data, textStatus, jqXHR) {
                 alert('Error updating resource');
               }
           });
        });       
        if ($('form[name="charge"]').is(':visible')) {
          $('form[name="charge"]').hide();
        }
        else {
          $('form[name="charge"]').show();          
        }
      });

    }

    this.configForm = function(entity) {

      $("#content > div").hide(); // Initially hide all content
      $("#content_tabs li:first").attr("id","current"); // Activate first tab
      $("#content > div:first").fadeIn(); // Show first tab content
      $('#content_tabs a').click(function(e) {
        e.preventDefault();
        if ($(this).attr("name") == 'preview') {
          ($('#home_frame')[0]).contentWindow.location.reload();
        }
        if ($(this).closest("li").attr("id") == "current"){ //detection for current tab
         return;       
        }
        else{             
          $("#content > div").hide(); //Hide all content
          $("#content_tabs li").attr("id",""); //Reset id's
          $(this).parent().attr("id","current"); // Activate this
          $('#' + $(this).attr('name')).fadeIn(); // Show content for current tab
        }
      });

    }

    this.updateLineResource = function(control) {

       var form = $(control.form)
       var formdata = form.formParams(true);
       var lineIdx = form.attr('data-lineindex');
       var resourceIdx = form.attr('data-resourceindex');
       var booking = this.manager.model.currentEntity();
       var json_request = JSON.stringify(formdata);

       $.ajax({
               type: 'PUT',
               data : json_request,
               url : '/api/booking-line-resource',
               success: function(data, textStatus, jqXHR) {
                 for (attribute in formdata) {
                   booking.booking_lines[lineIdx].booking_line_resources[resourceIdx][attribute] = formdata[attribute];
                 }
               },
               error: function(data, textStatus, jqXHR) {
                 alert('Error updating resource');
               }
           });

    }

    this.statusClass = function(entity) {
      var className = null;
      switch (entity.status) {
        case 'pending_confirmation' :
          className = 'pending-status';
          break;
        case 'confirmed':
          className = 'confirmed-status';
          break;
        case 'in_progress':
          className = 'doing-status';
          break;
        case 'done':
          className = 'done-status';
          break;
        case 'cancelled':
          className = 'error-status';
          break;          
      }
      return className;
    }

    this.paymentStatusClass = function(entity) {
      var className = null;
      switch (entity.payment_status) {
        case 'none' :
          className = 'pending-status';
          break;
        case 'deposit':
          className = 'doing-status';
          break;
        case 'total':
          className = 'done-status';
          break;
      }
      return className; 
    }

    this.chargeStatusClass = function(entity) {
      var className = null;
      switch (entity.status) {
        case 'pending' :
          className = 'pending-status';
          break;
        case 'processing':
          className = 'doing-status';
          break; 
        case 'done':
          className = 'done-status';
          break;
        case 'denied':
          className = 'error-status';
          break;
      }
      return className;
    }    


  };
  
  var urls = { 
  	           query_url  : '/api/bookings',
  	           get_url : '/api/booking',
               update_url: '/api/booking'
             };
  
  var bookingHook = new BookingHook();
  var bookingManager = new EntityManagement(urls, 'bookings', <%=bookings_page_size%>, bookingHook, {prefix: '/admin/booking', hold_form_after_action:true});
 
 });
