<%= partial('price_definition_creation.js'.to_sym) %>
require(["jquery", "YSDEntityManagement", "YSDEntityManagementComplementHooks",
         "YSDRemoteDataSource", "YSDSelectSelector", "jquery.ui", "YSDjson2"], 
         function($, EntityManagement, EntityManagementComplementHooks,
           RemoteDataSource, SelectSelector) {
    
  var bookingItemExtra = {
     
       
    entityKey : function(entity) {
      return entity.code;
    },

    onEdit : function(entity) {
      $('#code').attr('code', true);
      $('#name').focus();
      this.configForm(entity);
      $.ajax({url: '/admin/rates/prices/'+ entity.price_definition_id, dataType: 'text'}).done(function(html) {
        var dom = $('<html />').prop('innerHTML', html);
        $('#prices_container').html(dom.find('body #page_wrapper'));
        $('head').append(dom.find('script'));
      });      
    },
  
    onNew : function() {
      $('#code').focus();
      this.configForm(null);     
    },

    onRenderEntities: function() {
      $('.elements-search').show(); 
    },

    configForm: function(entity) {

      $("#content > div").hide(); // Initially hide all content
      $("#content_tabs li:first").attr("id","current"); // Activate first tab
      $("#content > div:first").fadeIn(); // Show first tab content
      $('#content_tabs a').click(function(e) {
        e.preventDefault();
        if ($(this).attr("name") == 'preview') {
          ($('#home_frame')[0]).contentWindow.location.reload();
        }
        if ($(this).closest("li").attr("id") == "current"){ //detection for current tab
         return;       
        }
        else{             
          $("#content > div").hide(); //Hide all content
          $("#content_tabs li").attr("id",""); //Reset id's
          $(this).parent().attr("id","current"); // Activate this
          $('#' + $(this).attr('name')).fadeIn(); // Show content for current tab          
        }
      });

      var priceDefinitionDataSource= new RemoteDataSource('/api/rate-price-defs',
          {'id':'id','description':'name'});
      var priceDefinitionValue = (entity && entity.price_definition_id)?entity.price_definition_id:null; 
      var priceDefinitionSelector = new SelectSelector('price_definition[id]', priceDefinitionDataSource, priceDefinitionValue, true);   

    }     

  };

  var urls = { query_url  : '/api/booking-extras',
               create_url : '/api/booking-extra',
               update_url : '/api/booking-extra',
               delete_url : '/api/booking-extra',
               get_url    : '/api/booking-extra'
             };
  
  var hooks = [bookingItemExtra];
  
  // Add the complement hooks
  hooks = hooks.concat(EntityManagementComplementHooks.complements);
                 
  var hooksManager = new EntityManagement(urls, 'booking-extra', 20, hooks,
    {prefix: '/admin/booking',hold_form_after_action:true});

  
});