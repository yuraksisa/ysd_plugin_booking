require(['YSDFormatter', 'jquery', 'jquery.ui', 'jquery.ui.datepicker-es', 'jquery.validate',
         'jquery.ui.datepicker.validation','jquery.formparams', 'jquery.fixedtable', 'datejs'], 
        function(YSDFormatter, $) {

  bookingPlanningModel = {
    view: 'home',                     /* The current view */
    dateFrom: null,
    dateTo: null,
    product: null,
    reference: null,
    references: null,
    planningData : null,

    // Selected cell
    selectedReservations: null,        /* Reservations of the selected cell */
    selectedDate: null,                /* Date of the selected cell */
    selectedReference: null,           /* Stock reference of the selected cell */

    // Selected reservation (one cell can hold more than 1 reservation)
    selectedItemOrigin: null,          /* Origin of the selected reservation or prereservation */
    selectedItemOriginAbbr: null,      /* Origin abbreviature of the selected reservation or prereservation */
    selectedItemId: null,              /* Id of the selected reservation or prereservation */
    selectedItemDateFrom: null,        /* Date from of the selected reservation or prereservation */
    selectedItemDateTo: null,          /* Date to of the selected reservation or prereservation */
    selectedItemPlanningColor: null,   /* Planning color of the selected reservation or prereservation */

    newReference: null,                /* New stock reference to assign or reassign */

    available_resources: null,           /* Available resources (for selectedItem) */
    category_available_resources: null,  /* Category available resources (for selectedItem) */
    total_available_resources: 0,      
    total_category_available_resources: 0,

    scrollTop: null,
    scrollLeft: null,
    prereservationCell: null,
    prereservationReference: null,
    selectedReservationsScrollTop: null,
    pendingReservationsScrollTop: null,

    mode: 'select-reservation',
    months: ['ENE','FEB','MAR','ABR','MAY','JUN','JUL','AGO','SEP','OCT','NOV','DIC'],

    isMultipleReservations: function() { /* Check if there are multiple reservations */

      if (this.selectedReservations != null && this.selectedReservations != '') {
        return this.selectedReservations.split(' ').length > 1;
      }
      else {
        return false;
      }

    },

    availableResources: function() { /* Check available resource candidates */ 
 
      var from = this.selectedItemDateFrom.toString('yyyy-MM-dd');
      var to = this.selectedItemDateTo.toString('yyyy-MM-dd');
      var url = '/api/booking/available-resources?from='+from+'&to='+to;

      $.ajax({
        type: 'GET',
        url : url,
        contentType: 'application/json; charset=utf-8',
        dataType : 'json',
          success: function(data, textStatus, jqXHR) {
            bookingPlanningModel.available_resources = [];
            bookingPlanningModel.category_available_resources = [];
            bookingPlanningModel.total_available_resources = 0;
            bookingPlanningModel.total_category_available_resources = 0;

            for (product_category in data) {
              var availableStock = data[product_category].available_stock;
              for (var idx=0;idx<availableStock.length;idx++) {
                bookingPlanningModel.available_resources.push(availableStock[idx]);
                bookingPlanningModel.category_available_resources.push(availableStock[idx]);
              }
              bookingPlanningModel.total_available_resources += availableStock.length;
              bookingPlanningModel.total_category_available_resources += availableStock.length;
            }

            bookingPlanningView.update('available_resources');
          },
          error: function(textStatus, jqXHR) {
            alert('Error comprobando recursos disponibles');
          }
        }); 

    },

    loadData: function(reloadSelectedReservation) { /* Load planning data */
  	  if (this.dateFrom != null && this.dateTo != null) {
  	    var from = this.dateFrom.toString('yyyy-MM-dd');
  	    var to = this.dateTo.toString('yyyy-MM-dd');
  	    var url = '/api/booking/planning-summary?from='+from+'&to='+to;
  	    if (this.product != null) {
  	      url += '&product='+this.product;
        }
  	    else if (this.reference != null) {
  	      url += '&reference='+this.reference;
  	    } 
 	      $.ajax({
  	        type: 'GET',
  	   	    url : url,
  	   	    contentType: 'application/json; charset=utf-8',
  		      dataType : 'json',
  		      success: function(data, textStatus, jqXHR) {
               bookingPlanningModel.references = data.references;
               bookingPlanningModel.planningData = data.result;
               bookingPlanningView.update('data_available');
               if (reloadSelectedReservation) {
                 bookingPlanningModel.loadSelectedReservations(true); // Reload the selected reservation
               }
            },
            error: function(textStatus, jqXHR) {
              alert('Error obteniendo datos del planning');
            }
          });  	 
 	    }
      else {
    	bookingPlanningView.update('not_enough_information');
      }
    },

    loadPendingAssignation: function() { /* Load not assigned reservations */

       $('#operation_area').load('/admin/booking/planning2-pending-assignation #pending_assignation_container',
        null,
        function(responseText, textStatus, jqXHR){
          if (jqXHR.status == 200) {
            bookingPlanningView.update('notification', 'Reservas pendientes de asignar');
            $('.pending_assign_button').unbind('click');
            $('.pending_assign_button').bind('click', function(){
              var id = $(this).attr('data-id');
              var dateFrom = $(this).attr('data-date-from');
              var dateTo = $(this).attr('data-date-to');
              var planningColor = $(this).attr('data-planning-color');
              bookingPlanningController.pendingAssignButtonClick(id, dateFrom, dateTo, planningColor);
            }); 
            $('.color').bind('change', function() {
               var id = $(this).parent().find('input[name=id]').val();
               var type = $(this).parent().find('input[name=type]').val();
               var color =$(this).val();
               bookingPlanningController.colorChanged(id, type, color);
            });
            if (bookingPlanningModel.pendingReservationsScrollTop != null) {
              $('#pending_assignation_holder').scrollTop(bookingPlanningModel.pendingReservationsScrollTop);
            }
          }
          else {
            alert('Error cargando datos');
          }
        });
    

    },

    loadPrereservations: function() { /* Load prereservations */

      if (this.dateFrom != null && this.dateTo != null) {
        var from = this.dateFrom.toString('yyyy-MM-dd');
        var to = this.dateTo.toString('yyyy-MM-dd');
        var url = '/admin/booking/planning2-prereservations?from='+from+'&to='+to;
        $('#operation_area').load(url + ' #prereservations_container',
          function(responseText, textStatus, jqXHR){
            if (jqXHR.status == 200) {
              bookingPlanningView.update('notification', 'Prereservas (bloqueos stock)');
            }
          });    
      }
      else {
        bookingPlanningView.update('not_enough_information');
      }


    },

    loadSelectedReservations: function(startResourceSelection) { /* Load the selected reservation */
      $('#operation_area').load('/admin/booking/planning2-select?reference='+this.selectedReference+'&date='+this.selectedDate+' #reservation_selector', null,
        function(responseText, textStatus, jqXHR){
          if (jqXHR.status == 200) {
            if ($('form[name=select_booking]').length > 0) { // More than one candidate
              $('#select_resource').hide();
              $('form[name=select_booking] input[type=radio][name=id]').unbind('change');
              $('form[name=select_booking] input[type=radio][name=id]').bind('change', function(){
                 bookingPlanningController.candidateChanged($(this).val(),
                                                           $(this).attr('rel'),
                                                           $(this).attr('data-date-from'),
                                                           $(this).attr('data-date-to'),
                                                           $(this).attr('data-planning-color'));
              });
            }
            else {
              if ($('form[name=reassign_form] input[name=id]').val() != 'undefined') {
                bookingPlanningModel.selectedItemId = $('form[name=reassign_form] input[name=id]').val();
              }
              else {
                bookingPlanningModel.selectedItemId = null;
              }

              bookingPlanningModel.selectedItemDateFrom = $('#select_resource').attr('data-date-from');
              bookingPlanningModel.selectedItemDateTo = $('#select_resource').attr('data-date-to');
              bookingPlanningModel.selectedItemPlanningColor = $('#select_resource').attr('data-planning-color');
              
              if ($('form[name=reassign_form] input[name=origin]').val() != 'undefined') {
                bookingPlanningModel.selectedItemOrigin = $('form[name=reassign_form] input[name=origin]').val();
                if (bookingPlanningModel.selectedItemOrigin == 'booking') {
                  bookingPlanningModel.selectedItemOriginAbbr = 'R';
                }
                else if (bookingPlanningModel.selectedItemOrigin == 'prereservation') {
                  bookingPlanningModel.selectedItemOriginAbbr = 'P';
                }
              }
              else {
                bookingPlanningModel.selectedItemOrigin = null;
              }
              bookingPlanningView.selectReservation(bookingPlanningModel.selectedReservations.substring(0,1),
                                                    bookingPlanningModel.selectedReservations.substring(1));
              bookingPlanningModel.availableResources(); // Load the available resources
            }
            
            if (startResourceSelection) {
              bookingPlanningController.startResourceSelectionClick(); // Experimental
            }
            if (bookingPlanningModel.selectedReservationsScrollTop != null) {
              $('#reservation_holder').scrollTop(bookingPlanningModel.selectedReservationsScrollTop);
            }

            $('.color').bind('change', function() {
               var id = $(this).parent().find('input[name=id]').val();
               var type = $(this).parent().find('input[name=type]').val();
               var color =$(this).val();
               bookingPlanningController.colorChanged(id, type, color);
            })
            $('.destroy_prereservation_button').bind('click', function() {
               bookingPlanningController.destroyPrereservationClick($(this).attr('rel'));
            })
          }
        });
    },

    reassignResource: function() { /* Reassign a resource */
      var url = '/admin/booking/planning-reassign-reservation';
      url+='?id='+this.selectedItemId+'&resource='+this.newReference+'&type='+this.selectedItemOrigin;
      $.ajax({
          type: 'POST',
          url : url,
          success: function(data, textStatus, jqXHR) {
            bookingPlanningModel.selectedReference = bookingPlanningModel.newReference;
            bookingPlanningView.update('reassigned');
          },
          error: function(textStatus, jqXHR) {
            alert('Error reasignando');
          }
      });    
    },

    createPrereservation: function() { /** Create a new prereservation */
        var formdata = $('form[name="element"]').formParams(true);
        delete formdata.id;
        var json_request = JSON.stringify(formdata);      
        $.ajax({
               type: 'POST',
               data : json_request,
               url : '/api/booking-prereservation',
               success: function(data, textStatus, jqXHR) {
                 bookingPlanningModel.prereservationCell = null;
                 bookingPlanningModel.prereservationReference = null;
                 bookingPlanningView.update('created_prereservation');
               },
               error: function(data, textStatus, jqXHR) {
                 alert('Error creando prereserva');
               }
           });       
    },

    destroyPrereservation: function(id) {
      var url = '/admin/booking/planning-remove-prereservation';
      url+='?id='+id;
      $.ajax({
          type: 'POST',
          url : url,
          success: function(data, textStatus, jqXHR) {
            bookingPlanningModel.selectedReference = null;
            bookingPlanningModel.newReference = null;
            bookingPlanningModel.mode = 'select-reservation';
            bookingPlanningView.update('destroyed_preservation');
          },
          error: function(textStatus, jqXHR) {
            alert('Error eliminando prereserva');
          }
      });          
    },

    changeColor: function(id, type, color) {
      var url = '/admin/booking/planning-change-color';
      url+='?id='+id+'&type='+type+'&color='+escape(color);
      $.ajax({
          type: 'POST',
          url : url,
          success: function(data, textStatus, jqXHR) {
            bookingPlanningView.update('changed_color');
          },
          error: function(textStatus, jqXHR) {
            alert('Error eliminando prereserva');
          }
      });       
    }

  }

  bookingPlanningController = {
 
    loadPendingAssignationClick: function() { /* The user clicks on a see reservations not assigned */
       
       bookingPlanningView.update('cancel_current_selection');
       bookingPlanningModel.loadPendingAssignation();
    },

    loadPreservationsClick: function() { /* The user selects show prereservations */ 

       bookingPlanningView.update('cancel_current_selection');
       bookingPlanningModel.loadPrereservations();

    },

    pendingAssignButtonClick: function(id, dateFrom, dateTo, planningColor) { /* The user clicks on assign button (reservations not assigned) */

       $('.pending_assign_row').css('background-color', 'white');
       $('.pending_assign_row[rel='+id+']').css('background-color', 'yellow');
       bookingPlanningModel.selectedItemId = id;
       bookingPlanningModel.selectedItemOrigin = 'booking';
       bookingPlanningModel.selectedItemOriginAbbr = 'R';
       bookingPlanningModel.selectedItemDateFrom = dateFrom;
       bookingPlanningModel.selectedItemDateTo = dateTo;
       bookingPlanningModel.selectedItemPlanningColor = planningColor;
       $('#select_resource').show();
       $('#select_resource_detail').empty();

       bookingPlanningView.highLightDate(dateFrom, dateTo);
       bookingPlanningController.startResourceSelectionClick();

       bookingPlanningModel.availableResources();

    },

    dataFilledClick: function(reference, date, selectedReservations) {

      bookingPlanningModel.view = 'home';
      $('#planning_views').val(bookingPlanningModel.view);

      if ($('#preresevation_area:visible')) {
        $('#prereservation_container').hide();
        $('#operation_area').show();
      }

      if (bookingPlanningModel.prereservationCell != null) {
        $(bookingPlanningModel.prereservationCell).css('background-color', 'white');
        bookingPlanningModel.prereservationCell = null;
      }
      if (bookingPlanningModel.prereservationReference != null) {
        $($('#'+bookingPlanningModel.prereservationReference).children()[0]).css('background-color','white');
        bookingPlanningModel.prereservationReference = null;
      }

      if (bookingPlanningModel.mode == 'select-reservation') {
        if (bookingPlanningModel.selectedItemId != null) {
          var element = $("td[rel~="+"'"+bookingPlanningModel.selectedItemOriginAbbr+bookingPlanningModel.selectedItemId+"'"+"]");
          element.removeClass('selected');
          $(element.parent().children()[0]).css('background-color','white');
        }
        bookingPlanningModel.selectedReservations = selectedReservations;
        bookingPlanningModel.selectedReference = reference;
        bookingPlanningModel.selectedDate = date;
        bookingPlanningModel.loadSelectedReservations(false);
      }

      if (!bookingPlanningModel.isMultipleReservations()) {
        this.startResourceSelectionClick(); // Experimental
      }

    },

    dataEmptyClick: function(theElement, reference, date) { /* Click on an empty cell: New prereservation */

      if (bookingPlanningModel.selectedItemId != null) {
        var element = $("td[rel~="+"'"+bookingPlanningModel.selectedItemOriginAbbr+bookingPlanningModel.selectedItemId+"'"+"]");
        element.removeClass('selected');
        $(element.parent().children()[0]).css('background-color','white');        
      }
      
      if (bookingPlanningModel.prereservationCell != null) {
        $(bookingPlanningModel.prereservationCell).css('background-color', 'white');
        bookingPlanningModel.prereservationCell = null;
      }

      if (bookingPlanningModel.prereservationReference != null) {
        $($('#'+bookingPlanningModel.prereservationReference).children()[0]).css('background-color','white');
      }

      bookingPlanningModel.prereservationCell = theElement;
      $(bookingPlanningModel.prereservationCell).css('background-color', 'yellow');
      
      bookingPlanningModel.prereservationReference = reference;
      $($('#'+reference).children()[0]).css('background-color','yellow');

      $('#prereservation_button').unbind('click');
      $('#prereservation_button').bind('click', function(){
        if ($('#prereservation_form').valid()) {
          bookingPlanningController.prereservationButtonClick();
        }
      });

      $('#cancel_prereservation_button').unbind('click');
      $('#cancel_prereservation_button').bind('click', function(){
        bookingPlanningController.cancelPrereservationButtonClick();
      });

      $('#booking_item_reference_value').html(reference);
      $('form[name=element] input[name=booking_item_reference]').val(reference);
      
      // Setup the form
      var locale = $.datepicker.regional["<%=session[:locale] || 'es'%>"];
      $('#date_from').datepicker({
            numberOfMonths:1}, 
            locale);
      $('#date_to').datepicker({
            numberOfMonths:1}, 
            locale);
      $('#date_from').bind('change', function() {
           var dateFrom = $('#date_from').datepicker('getDate'); 
           var dateTo = $('#date_to').datepicker('getDate');
           if (dateTo != null) {
             dateTo.setDate(dateFrom.getDate() + <%=@product_family.cycle_of_24_hours ? 1 : 0%>);
           }
           $('#date_to').datepicker('setDate', dateTo );
           $('#date_to').datepicker('option', 'minDate', dateFrom.add(<%=@product_family.cycle_of_24_hours ? 1 : 0%>).days());
         });
      $('#date_from').datepicker('setDate', new Date(date));
      $('#date_from').trigger('change');

      $.validator.addMethod("time24", function(value, element) {
        if (!/^\d{2}:\d{2}$/.test(value)) {
          return false;
        } 
        var parts = value.split(':');
        if (parseInt(parts[0]) > 23 || parseInt(parts[1]) > 59) {
          return false;
        } 
        return true;
      }, "Invalid time format. The format is hh:mm");

      $('#prereservation_form').validate({

            submitHandler: function(form) 
            {
              return false;
            },        

            rules : {
               'date_from': {
                 required: true 
               },
             
               'date_to': {
                 required: true,
                 dpCompareDate : { 'notLessThan' : '#date_from'} 
               },

               'title': {
                 required: true
               }

               <% if @product_family.time_to_from %>
               ,
               'time_from': {
                 required: true,
                 time24: true
               },
               'time_to': {
                 required: true,
                 time24: true
               }

               <% end %>
            
            },
            
            messages : {
              
               'date_from': {
                 required : '<%=t.bookings_planning.prereservation.validation.date_from_required%>'
               }, 
              
               'date_to' : {
                 required : '<%=t.bookings_planning.prereservation.validation.date_to_required%>',
                 dpCompareDate : '<%=t.bookings_planning.prereservation.validation.date_to_greater_date_from%>'
               },

               'title': {
                 required: '<%=t.bookings_planning.prereservation.validation.title_required%>'
               }    
               <% if @product_family.time_to_from %>
               ,
               'time_from': {
                 required: '<%=t.bookings_planning.prereservation.validation.time_from_required%>',
                 time24: '<%=t.validations.time_format_invalid%>'
               },
               'time_to': {
                 required: '<%=t.bookings_planning.prereservation.validation.time_to_required%>',
                 time24: '<%=t.validations.time_format_invalid%>'
               }
               <% end %>
            }

      });

      // Show prereservation form
      $('#operation_area').hide();
      $('#prereservation_container').show();
    },

    prereservationButtonClick: function() {
       bookingPlanningModel.createPrereservation();
    },

    cancelPrereservationButtonClick: function() {
      if (bookingPlanningModel.prereservationCell != null) {
        $(bookingPlanningModel.prereservationCell).css('background-color', 'white');
        bookingPlanningModel.prereservationCell = null;
      }
      if (bookingPlanningModel.prereservationReference != null) {
        $($('#'+bookingPlanningModel.prereservationReference).children()[0]).css('background-color','white');
        bookingPlanningModel.prereservationReference = null;
      }      
      $('#prereservation_container').hide();       
      $('#operation_area').show();
      $('form[name=element]')[0].reset();
    },

    destroyPrereservationClick: function(id) { /* Destroy preresevation */
      
      bookingPlanningModel.destroyPrereservation(id);

    },

    colorChanged: function(id, type, color) { /* Change planning color */

      bookingPlanningModel.changeColor(id, type, color);

    },


    candidateChanged: function(id, origin, dateFrom, dateTo, planningColor) { /* Select candidate (if there are more than one in cell) */
      if (bookingPlanningModel.selectedItemId != null) {
        var element = $("td[rel~="+"'"+bookingPlanningModel.selectedItemOriginAbbr+bookingPlanningModel.selectedItemId+"'"+"]");
        element.removeClass('selected');
        $(element.parent().children()[0]).css('background-color','white');        
      }
      setTimeout(function() {
        bookingPlanningModel.selectedItemId = id;
        bookingPlanningModel.selectedItemOrigin = origin;
        bookingPlanningModel.selectedItemDateFrom = dateFrom;
        bookingPlanningModel.selectedItemDateTo = dateTo;
        bookingPlanningModel.selectedItemPlanningColor = planningColor;
        if (bookingPlanningModel.selectedItemOrigin == 'booking') {
          bookingPlanningModel.selectedItemOriginAbbr = 'R';
        }
        else if (bookingPlanningModel.selectedItemOrigin == 'prereservation') {
          bookingPlanningModel.selectedItemOriginAbbr = 'P';
        }        
        bookingPlanningView.selectReservation(bookingPlanningModel.selectedItemOriginAbbr,
                                              bookingPlanningModel.selectedItemId);
        $('#select_resource').show();
        bookingPlanningModel.availableResources(); // Load the available resources
        bookingPlanningController.startResourceSelectionClick(); // Experimental
      }, 200);
    },

    cancelReservation: function() { /* Support method to cancel reservation */
      bookingPlanningModel.mode = 'select-reservation';
      $('#select_resource').hide();
      $(".data").unbind('click');
      $(".data.empty").bind('click', function(event) {
        var theElement = $(this);
        bookingPlanningController.dataEmptyClick(theElement,
                                                 $(this).parent().attr('id'), 
                                                 $(this).attr('data-date'));
      });
      $(".data.filled").bind('click', function(event) {
        bookingPlanningController.dataFilledClick($(this).parent().attr('id'), 
                                                  $(this).attr('data-date'),
                                                  $(this).attr('rel'));
      });  
      bookingPlanningView.unselectReservation(bookingPlanningModel.selectedItemOriginAbbr,
                                              bookingPlanningModel.selectedItemId);
      bookingPlanningModel.selectedItemId = null;
      bookingPlanningModel.selectedItemOrigin = null;      
      bookingPlanningModel.selectedItemOriginAbbr = null;
      bookingPlanningModel.selectedItemDateFrom = null;
      bookingPlanningModel.selectedItemDateTo = null;
      bookingPlanningModel.selectedItemPlanningColor = null;
      $('td.reference').removeClass('available');
      $('td.reference').removeClass('unavailable');
    },

    cancelResourceClick: function() { /* Cancel reservation selected */
      this.cancelReservation();
    },

    startResourceSelectionClick: function() { /* Start the resource selection */
      bookingPlanningModel.mode= 'select-resource';
      $('#cancel_resource_button').hide();
      $(".data").unbind('click');
      $(".data").bind('click', function() {
        bookingPlanningController.selectResourceClick($(this).parent().attr('id'));
      });
      $('#select_resource_help').show();
      $('#cancel_resource_button').show(); 
    },

    cancelResourceSelectionClick: function() { /* Cancel the resource selection */
      var resource = $('form[name=reassign_form] input[name=resource]').val();
      $($('#'+resource).children()[0]).css('background-color','white');
      $('#resource').html('');
      $('form[name=reassign_form] input[name=resource]').val('');      
      this.cancelReservation();
    },

    selectResourceClick: function(resource) { /* Select the resource */
      if (bookingPlanningModel.newReference != null) {
        $($('#'+bookingPlanningModel.newReference).children()[0]).css('background-color','white');
      }
      $('#original_resource').html(bookingPlanningModel.selectedReference);
      bookingPlanningModel.newReference = resource;
      $('#resource').html(resource);
      $('form[name=reassign_form] input[name=resource]').val(resource);
      $('#select_resource_help').hide(); 
      $('#cancel_resource_button').hide();
      $('#reassign_resource').show();
      $($('#'+resource).children()[0]).css('background-color','yellow');
      // Reassign button
      $('#reassign_button').unbind('click');
      $('#reassign_button').bind('click', function(){
        bookingPlanningController.reassignButtonClick();
      });
      // Cancel select resource
      $('#cancel_select_resource_button').unbind('click');
      $('#cancel_select_resource_button').bind('click', function() {
        bookingPlanningController.cancelResourceSelectionClick();
      });      
    },

    reassignButtonClick: function() {
      bookingPlanningModel.reassignResource();
    },

    planningViewsChanged: function(view) {
      bookingPlanningModel.view = view;     
      if (view == 'assign_pending') {
        this.cancelReservation();
        this.loadPendingAssignationClick();
      }
      else if (view == 'prereservations') {
        this.cancelReservation();
        this.loadPreservationsClick();
      }
      else if (view == 'home') {
        $('#pending_assignation_container').hide();
        this.cancelReservation();
      }
    },

    availableResourceClick: function(resource) {

      var scrollTop = $('tr#'+resource).position().top;
      
      $('#parent').scrollTop(scrollTop);

    }


  }

  bookingPlanningView = {

    init: function() {
      $.datepicker.setDefaults( $.datepicker.regional["<%=session[:locale] || 'es'%>" ] );
      bookingPlanningModel.loadData(false);
      $('#parent').scroll(function (event) {
      	if ($(this).scrollLeft() == 0) {
      	  // Start reached (request for data)
      	}
        if($(this).scrollLeft() + $(this).innerWidth() >= $(this)[0].scrollWidth) {
          // End reached (request for data)
        }
      });
      $('#planning_views').bind('change', function() {
        bookingPlanningController.planningViewsChanged($(this).val());
      });     
    },

    storeScrollTop: function() {
      if (bookingPlanningModel.view == 'assign_pending') {
        bookingPlanningModel.pendingReservationsScrollTop = $('#pending_assignation_holder').scrollTop();
      }
      else if (bookingPlanningModel.view = 'home') {
        bookingPlanningModel.selectedReservationsScrollTop = $('#reservation_holder').scrollTop();
      } 
    },

    update: function(event, value) {
  	  switch (event) {
  		case 'data_available':

  		  // Create the column for the references
  		  if ($('#planning_table tbody').children().length == 0) {
  		  	$("#planning_table thead").append("<tr></tr>");
  		  	$("#planning_table thead tr:first").append("<th style='min-width:120px'>"+'RECURSOS'+"</th>");
  		  	for (item in bookingPlanningModel.references) {
  		  	  $("#planning_table tbody").append("<tr id='" + item + "' rel='" + bookingPlanningModel.references[item] + "'></tr>");
  		  	  $("#planning_table tbody tr#"+item+"").append("<td class='reference' data-reference='"+item+"'>"+bookingPlanningModel.references[item] + '-' + item+"</td>");
  		  	}
  		  }

  		  for (item in bookingPlanningModel.planningData) {
          var date = new Date(item);
          var title = date.getDate() + ' ' + bookingPlanningModel.months[date.getMonth()];
          var datestr = YSDFormatter.formatDate(date, 'yyyy-MM-dd');
          var firstMonthDay = date.getDate() == 1 ? true : false;
          var oddMonth = (date.getMonth()+1) % 2 == 0;
          var oddMonthHeaderClass = oddMonth ? 'odd-month-header' : '';
          var firstMonthDayColumnClass = firstMonthDay ? 'first-month-day' : '';

          // Create the header row (with dates)
          var headerClass = 'date_header';
          if (oddMonth) {
              headerClass += ' ';
              headerClass += oddMonthHeaderClass;
          }
          if (firstMonthDay && date.getTime() != bookingPlanningModel.dateFrom.getTime()) {
              headerClass += ' ';
              headerClass += firstMonthDayColumnClass;
          }
          $("#planning_table thead tr:first").append("<th class='" + headerClass + "' rel='" + datestr + "'>"+title+"</th>");

          // fill the data
          for (resource in bookingPlanningModel.planningData[item]) {
              var value = '';
              if (bookingPlanningModel.planningData[item][resource].total == 1) {
                value = 'X';
              }
              else if (bookingPlanningModel.planningData[item][resource].total > 1) {
                value = bookingPlanningModel.planningData[item][resource].total;
              }
              
              var background = 'white';
              if (bookingPlanningModel.planningData[item][resource].detail.length > 0) {
                background = bookingPlanningModel.planningData[item][resource].detail[0].planning_color;
              }
              var cellInformation = "style='background:" + background + "'";
              cellInformation += " data-date='" + item + "' ";              

              var cellClasses = 'data';

              if (value == '') {
                cellClasses += ' empty';
              }
              else {
                cellClasses += ' filled';
              }

              if (firstMonthDay && date.getTime() != bookingPlanningModel.dateFrom.getTime()) {
                cellClasses += ' ';
                cellClasses += firstMonthDayColumnClass;
              }

              cellInformation += "class='"+cellClasses+"'";

              var summary = bookingPlanningModel.planningData[item][resource].summary;
              if (summary != null) {
                cellInformation += " title='" + summary + "'";
              }              
              var reservationIds = bookingPlanningModel.planningData[item][resource].reservation_ids;
              var preReservationIds = bookingPlanningModel.planningData[item][resource].prereservation_ids;
              
              if (reservationIds != null) {
                var reservationsArray = reservationIds.split(' ');
                for (var idx=0;idx<reservationsArray.length;idx++) {
                  reservationsArray[idx] = 'R'+reservationsArray[idx];
                }
                reservationIds = reservationsArray.join(' ');
              }
              if (preReservationIds != null) {
                var preReservationsArray = preReservationIds.split(' ');
                for (var idx=0;idx<preReservationsArray.length;idx++) {
                  preReservationsArray[idx] = 'P'+preReservationsArray[idx];
                }
                preReservationIds = preReservationsArray.join(' ');
              }

              var ids = null;
              if (reservationIds != null) {
                ids = reservationIds;
              }
              if (preReservationIds != null) {
                if (ids == null) {
                  ids = preReservationIds;
                }
                else {
                  ids += ' ';
                  ids += preReservationIds;
                }
              }
              if (ids != null) {
                cellInformation += " rel='" + ids + "'";
              }
              $("tr#"+resource).append("<td " + cellInformation + ">"+value+"</td>");	
          }

  		  }
  		  
        $("#planning_table").tableHeadFixer({"left" : 1});
        $(".odd-month-header").css("background-color", "#CCC");
        $(".odd-month-header").css("color", "black");
        $('.first-month-day').css("border-left", "1px double black");
        $(".data").unbind('click');
        $(".data.empty").bind('click', function(event) {
          var theElement = $(this);
          bookingPlanningController.dataEmptyClick(theElement,
                                                   $(this).parent().attr('id'), 
                                                   $(this).attr('data-date'));
        });        
        $(".data.filled").bind('click', function(event) {
          bookingPlanningController.dataFilledClick($(this).parent().attr('id'),
                                                    $(this).attr('data-date'),
                                                    $(this).attr('rel'));
        }); 		 
        
        if (bookingPlanningModel.scrollLeft != null) {
          $('#parent').scrollLeft(bookingPlanningModel.scrollLeft);
        }
        if (bookingPlanningModel.scrollTop != null) {
          $('#parent').scrollTop(bookingPlanningModel.scrollTop);
        }

  		  break;

      case 'notification':
        $('#notification_container').html(value);
        if (value == '') {
          $('#notification_container').hide();
        }
        else {
          $('#notification_container').show();
        }
        break;

      case 'cancel_current_selection': 
        if (bookingPlanningModel.selectedItemId != null) { // delete the selected reservation
          var element = $("td[rel~="+"'"+bookingPlanningModel.selectedItemOriginAbbr+bookingPlanningModel.selectedItemId+"'"+"]");
          element.removeClass('selected');
          $(element.parent().children()[0]).css('background-color','white');
        }       
        break;

      case 'available_resources':
        // Build resources detail
        $('td.reference').removeClass('available');
        $('td.reference').removeClass('unavailable');
        $('td.reference').addClass('unavailable');
        if (bookingPlanningModel.total_available_resources > 0 ) {
          var resources_html = '<div class="container_12">';
          for (var idx=0; idx<bookingPlanningModel.available_resources.length; idx++) {
            resources_html += '<div class="grid_6"><div class="guiblock available_resource" style="cursor:hand;cursor:pointer" rel="'+bookingPlanningModel.available_resources[idx]+'">'+ 
                            bookingPlanningModel.available_resources[idx] + 
                            '</div></div>';
            $('td.reference[data-reference='+bookingPlanningModel.available_resources[idx]+']').addClass('available');            
            $('td.reference[data-reference='+bookingPlanningModel.available_resources[idx]+']').removeClass('unavailable');            
          }
          resources_html += '</div>';

          $('#select_resource_detail').html('<hr/><p>Hay ' +
            bookingPlanningModel.total_available_resources +
            ' recursos disponibles ( ' + bookingPlanningModel.total_category_available_resources  + ' de la misma categoría). Los verá de color verde</p>'+
            resources_html);
        }
        else {
          $('#select_resource_detail').html('<hr/><p>No hay recursos disponibles</p>');
        }
        $('.available_resource').bind('click', function() {
          bookingPlanningController.availableResourceClick($(this).attr('rel'));
        });
        break;  

      case 'reassigned':
        this.storeScrollTop();     
        alert('Reserva asignada/reasignada');
        this.reload(bookingPlanningModel.view == 'home');
        if (bookingPlanningModel.view == 'assign_pending') {
          bookingPlanningController.cancelReservation();
          bookingPlanningController.loadPendingAssignationClick();
        }
        break;

      case 'created_prereservation':
        $('#prereservation_container').hide();
        $('#operation_area').show();
        $('form[name=element]')[0].reset();
        alert('Prereserva creada');
        this.reload(false);
        break;

      case 'destroyed_preservation':
        alert('Reserva eliminada');
        this.reload(false); // Reload the reservations
        break;

      case 'changed_color':
        this.storeScrollTop();
        alert('Color cambiado');
        this.reload(bookingPlanningModel.view == 'home'); // Reload the reservations
        if (bookingPlanningModel.view == 'assign_pending') {
          bookingPlanningController.loadPendingAssignationClick();
        }        
        break;

  		case 'not_enough_information':
  		  alert('No hay suficientes datos para obtener la información');
  		  break;
  	  }
    },

    reload: function(reloadSelectedReservation) { /* Reload the data */
        bookingPlanningModel.scrollLeft = $('#parent').scrollLeft();
        bookingPlanningModel.scrollTop = $('#parent').scrollTop();
        $('#planning_table thead').empty();
        $('#planning_table tbody').empty();
        $('#operation_area').empty();
        bookingPlanningModel.loadData(reloadSelectedReservation);
    },

    selectReservation: function(origin, id) {   
      bookingPlanningView.update('notification', 'Reasignación stock');
      bookingPlanningView.selectCurrentResource( $("td[rel~="+"'"+origin+id+"'"+"]"));
      $('#cancel_resource_button').unbind('click');
      $('#cancel_resource_button').bind('click', function() {
        bookingPlanningController.cancelResourceClick();
      });
    },

    selectCurrentResource: function(element) {
    
      bookingPlanningModel.selectedItemPlanningColor = element.css('background-color');
      if (bookingPlanningModel.selectedItemPlanningColor == 'rgba(0, 0, 0, 0)' || 
          bookingPlanningModel.selectedItemPlanningColor == 'transparent') {
        bookingPlanningModel.selectedItemPlanningColor = '#EEEEEE';
      }
      var lastStyleSheet = document.styleSheets[document.styleSheets.length - 1];
      var rule = '@keyframes selected {\
                  from { background-color:'+ bookingPlanningModel.selectedItemPlanningColor +'; }\
                  to { background-color: white; }\
                  }';
      lastStyleSheet.insertRule(rule, lastStyleSheet.cssRules.length);      
      element.addClass('selected');
      $(element.parent().children()[0]).css('background-color', bookingPlanningModel.selectedItemPlanningColor);

      this.highLightDate(bookingPlanningModel.selectedItemDateFrom, 
                         bookingPlanningModel.selectedItemDateTo);
      
    },

    unselectReservation: function(origin, id) {  
      bookingPlanningView.update('notification', ''); 
      bookingPlanningView.unSelectCurrentResource( $("td[rel~="+"'"+origin+id+"'"+"]"));
      $('#operation_area').empty();
      this.clearHighLightDate();
    },

    unSelectCurrentResource: function(element) {
      element.removeClass('selected');
      $(element.parent().children()[0]).css('background-color', 'white');      
    },

    highLightDate: function(dateFrom, dateTo) {

       var date = new Date(dateFrom);
       var dateTo = new Date(dateTo);
       this.clearHighLightDate();
       var planningColor = 'black';
       var color = 'white';

       while (date <= dateTo) {
         var strDate = YSDFormatter.formatDate(date,'yyyy-MM-dd');
         $('th.date_header[rel='+strDate+']').css('background',planningColor);
         $('th.date_header[rel='+strDate+']').css('color',color);
         date.addDays(1);
       }
       // Scrolls to the position
       var today = new Date();
       var dateFromConverted = new Date(dateFrom);
       if (dateFromConverted < today) {
         dateFromConverted = today;
       }
       var firstDay = YSDFormatter.formatDate(dateFromConverted,'yyyy-MM-dd');
       var scroll = $('th.date_header[rel='+firstDay+']').position().left > 0 ? 
                    $('th.date_header[rel='+firstDay+']').position().left +
                    $('#parent').scrollLeft() - 135 :
                    $('#parent').scrollLeft() + $('th.date_header[rel='+firstDay+']').position().left - 135;

       $('#parent').animate({
        scrollLeft: scroll
       }, 2000);

    },
    
    clearHighLightDate: function() {
       $('th.date_header').css('background','#EEE');
       $('th.date_header').css('color','black');
    }    


  }

});  