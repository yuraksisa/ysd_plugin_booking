require(["jquery",'ysdtemplate', "YSDMemoryDataSource", "YSDSelectSelector", "jquery.ui", 'jquery.validate', 
           'jquery.placeholder', 'jquery.ui', 'jquery.ui.datepicker-es', 
           'jquery.ui.datepicker.validation', 'jquery.validate',
           'jquery.tools', 'jquery.formparams', 'datejs'],
         function($, tmpl, MemoryDataSource, SelectSelector) {
    cyclicModel = {
       date: null,
       turn: null,
       dateLiteral: null,
       total: 0,
       all_days_same_turns: <%=@activity.all_days_same_turns%>,
       season_prices: <%=@activity.season_prices?%>,
       morning_turns: '<%=@activity.morning_turns%>',
       afternoon_turns: '<%=@activity.afternoon_turns%>',
       night_turns: '<%=@activity.night_turns%>',
       sunday_morning_turns: '<%=@activity.sunday_morning_turns%>',
       sunday_afternoon_turns: '<%=@activity.sunday_afternoon_turns%>',
       sunday_night_turns: '<%=@activity.sunday_night_turns%>',
       monday_morning_turns: '<%=@activity.monday_morning_turns%>',
       monday_afternoon_turns: '<%=@activity.monday_afternoon_turns%>',
       monday_night_turns: '<%=@activity.monday_night_turns%>',
       tuesday_morning_turns: '<%=@activity.tuesday_morning_turns%>',
       tuesday_afternoon_turns: '<%=@activity.tuesday_afternoon_turns%>',
       tuesday_night_turns: '<%=@activity.tuesday_night_turns%>',
       wednesday_morning_turns: '<%=@activity.wednesday_morning_turns%>',
       wednesday_afternoon_turns: '<%=@activity.wednesday_afternoon_turns%>',
       wednesday_night_turns: '<%=@activity.wednesday_night_turns%>',
       thursday_morning_turns: '<%=@activity.thursday_morning_turns%>',
       thursday_afternoon_turns: '<%=@activity.thursday_afternoon_turns%>',
       thursday_night_turns: '<%=@activity.thursday_night_turns%>', 
       friday_morning_turns: '<%=@activity.friday_morning_turns%>',
       friday_afternoon_turns: '<%=@activity.friday_afternoon_turns%>',
       friday_night_turns: '<%=@activity.friday_night_turns%>',
       saturday_morning_turns: '<%=@activity.saturday_morning_turns%>',
       saturday_afternoon_turns: '<%=@activity.saturday_afternoon_turns%>',
       saturday_night_turns: '<%=@activity.saturday_night_turns%>',
       morningTurns: [],
       afternoonTurns: [],
       nightTurns: [],
       buildTurns: function() {
           this.total = 0;
           this.date = $('#datepicker').datepicker("getDate").toString('yyyy-MM-dd');
           this.dateLiteral = $('#datepicker').datepicker("getDate").toString('dd MMMM, yyyy');
           var _morningTurns = '', _afternoonTurns = '', _nightTurns = '';
           if (this.all_days_same_turns) {
             _morningTurns = this.morning_turns;
             _afternoonTurns = this.afternoon_turns;
             _nightTurns = this.night_turns;
           }
           else {
             var dayOfWeek = new Date(this.date).getDay();
             switch (dayOfWeek) {
                case 0:
                  _morningTurns = this.sunday_morning_turns;
                  _afternoonTurns = this.sunday_afternoon_turns;
                  _nightTurns = this.sunday_night_turns;
                  break;
                case 1:
                  _morningTurns = this.monday_morning_turns;
                  _afternoonTurns = this.monday_afternoon_turns;
                  _nightTurns = this.monday_night_turns;                
                  break;
                case 2:
                  _morningTurns = this.tuesday_morning_turns;
                  _afternoonTurns = this.tuesday_afternoon_turns;
                  _nightTurns = this.tuesday_night_turns;                
                  break;
                case 3:
                  _morningTurns = this.wednesday_morning_turns;
                  _afternoonTurns = this.wednesday_afternoon_turns;
                  _nightTurns = this.wednesday_night_turns;                
                  break;
                case 4:
                  _morningTurns = this.thursday_morning_turns;
                  _afternoonTurns = this.thursday_afternoon_turns;
                  _nightTurns = this.thursday_night_turns;                
                  break;
                case 5:
                  _morningTurns = this.friday_morning_turns;
                  _afternoonTurns = this.friday_afternoon_turns;
                  _nightTurns = this.friday_night_turns;                
                  break;
                case 6:
                  _morningTurns = this.saturday_morning_turns;
                  _afternoonTurns = this.saturday_afternoon_turns;
                  _nightTurns = this.saturday_night_turns;                
                  break;
             }             
           }

          this.morningTurns = _morningTurns.split(',').filter(function(element){return element != '';});
          this.afternoonTurns = _afternoonTurns.split(',').filter(function(element){return element != '';});
          this.nightTurns = _nightTurns.split(',').filter(function(element){return element != '';});
          
          cyclicView.updatePrice();
          cyclicView.updateDate();
          cyclicView.updateTurns();
       },
       calculatePrice: function() {
          this.total = 0;
          if ($('#quantity_rate_1 option:selected').attr('data-total') != undefined) {
            this.total += new Number($('#quantity_rate_1 option:selected').attr('data-total'));
          }
          if ($('#quantity_rate_2 option:selected').attr('data-total') != undefined) {
            this.total += new Number($('#quantity_rate_2 option:selected').attr('data-total'));
          }
          if ($('#quantity_rate_3 option:selected').attr('data-total') != undefined) {
            this.total += new Number($('#quantity_rate_3 option:selected').attr('data-total'));
          }               
          cyclicView.updatePrice();
       }                                  
    };

    cyclicController = {
        onDateChanged: function(control) {
            control.form.submit();
        },
        onTurnChanged: function(control) {
            control.form.submit();
        },
        onQuantityChanged: function() {
            cyclicModel.calculatePrice();
        },
        onActivityFormSubmited: function() {
          if (cyclicModel.total == 0) {
            alert('<%=t.activity.no_ticket_selected%>');
            return false;
          }
          return true;
        }
    };

    cyclicView = {
        init: function() {
            $.datepicker.setDefaults( $.datepicker.regional["<%=session[:locale] || 'es'%>" ] );
            $("#datepicker").datepicker({
              minDate: new Date(),
              beforeShowDay: function(date){
                // Make sure invalidates not available dates
                <% unless @activity.all_year %>
                if (((date.getMonth() < <%=@activity.from_month-1%>) ||
                    (date.getMonth() == <%=@activity.from_month-1%> && 
                      date.getDate() < <%=@activity.from_day%>)) || 
                    (date.getMonth() > <%=@activity.to_month-1%> ||
                     (date.getMonth() == <%=@activity.to_month-1%> && 
                      date.getDate() > <%=@activity.to_day%>))) {
                  return [false];
                }
                <% end %>
                <% unless @activity.all_days %>
                  switch (date.getDay()) {
                     case 0:
                       <% unless @activity.sundays %>
                       return [false];
                       <% end %>
                       break;
                     case 1:
                       <% unless @activity.mondays %>
                       return [false];
                       <% end %>                     
                       break;
                     case 2:
                       <% unless @activity.tuesdays %>
                       return [false];
                       <% end %>                     
                       break;
                     case 3:
                       <% unless @activity.wednesdays %>
                       return [false];
                       <% end %>                     
                       break;
                     case 4:
                       <% unless @activity.thursdays %>
                       return [false];
                       <% end %>                     
                       break;
                     case 5:
                       <% unless @activity.fridays %>
                       return [false];
                       <% end %>                     
                       break;
                     case 6:
                       <% unless @activity.saturdays %>
                       return [false];
                       <% end %>                   
                       break;
                  }
                <% end %>
                /*
                if (date.getDate() == 14) {
                    return [false];
                }
                */
                return [true];
              }
            });
            $('#datepicker').datepicker('setDate', <%if defined?@date and !@date.nil?%>new Date("<%=@date%>")<%else%>new Date()<%end%>);
            $('#datepicker').bind('change', function() {
               var date = $('#datepicker').datepicker("getDate").toString('yyyy-MM-dd');
               $('#select_date').val(date);              
               cyclicController.onDateChanged($('#select_date')[0]);
            });  
            $('.quantity_rate').bind('change', function() {
               cyclicController.onQuantityChanged();
            });
            $('form[name=activity_form]').bind('submit', function() {
               return cyclicController.onActivityFormSubmited();
            });             
            cyclicModel.buildTurns();  
        },

        updateDate: function() {
          $('#date_text').html(cyclicModel.dateLiteral);
          $('#select_date').val(cyclicModel.date);
        },

        updatePrice: function() {
           $('#total').html(cyclicModel.total.toFixed(2) + '€');
           if (cyclicModel.total > 0) {
             $('#total').show();
             $('#botonera').show();
           }
           else {
             $('#total').hide();
             $('#botonera').hide();
           }
        },

        updateTurns: function() {

           var html = tmpl('script_turns_blocks',
             {morningTurns: cyclicModel.morningTurns,
              afternoonTurns: cyclicModel.afternoonTurns,
              nightTurns: cyclicModel.nightTurns});
           
           if (cyclicModel.morningTurns.length > 0 ||
               cyclicModel.afternoonTurns.length > 0 || 
               cyclicModel.nightTurns.length > 0) {
              $('#botonera').show();
           }
           else {
              $('#botonera').hide();
           }

           $('#turns').html(html);
           
           $('form[name=select_date_form] input[name=date]').bind('change', function(e) {
              cyclicController.onDateChanged($(this)[0]);
           });

           $('input[name=turn]').bind('change', function(e) {
              cyclicController.onTurnChanged($(this)[0]);
           });   

           <% if defined?@time and !@time.nil? %>
             $('form[name=select_date_form] input[name=turn][value="<%=@time%>"]').prop('checked', true);
           <% end %>

        }
    };

    cyclicView.init();

});