
require(["jquery", "YSDEntityManagement", "YSDEntityManagementComplementHooks",
         "YSDRemoteDataSource", "YSDSelectSelector", "jquery.ui", "autonumeric", "YSDjson2"],
         function($, EntityManagement, EntityManagementComplementHooks, RemoteDataSource, SelectSelector) {
    
  var bookingItemHook = {
     
    entity: null,
       
    entityKey : function(entity) {
      return entity.reference;
    },

    onEdit : function(entity) {
      this.entity = entity;
      $('#reference').attr('readonly', true);
      $('#name').focus();
      this.configForm(); 
    },
  
    onNew : function() {
      this.entity = null;
      $('#reference').focus();
      $('#reference').bind('input', function(){
        $(this).val(function(_, v){
          return v.replace(/\s+/g, '');
        });
      });      
      this.configForm();
    },
        
    onRenderEntities: function() {

      $('.elements-search').show(); 
      
    },

        
    /* ------- Internal function --------- */
    
    configForm : function(entity) {

      $("#content > div").hide(); // Initially hide all content
      $("#content_tabs li:first").attr("id","current"); // Activate first tab
      $("#content > div:first").fadeIn(); // Show first tab content
      $('#content_tabs a').click(function(e) {
        e.preventDefault();
        if ($(this).attr("name") == 'preview') {
          ($('#home_frame')[0]).contentWindow.location.reload();
        }
        if ($(this).closest("li").attr("id") == "current"){ //detection for current tab
         return;       
        }
        else{             
          $("#content > div").hide(); //Hide all content
          $("#content_tabs li").attr("id",""); //Reset id's
          $(this).parent().attr("id","current"); // Activate this
          $('#' + $(this).attr('name')).fadeIn(); // Show content for current tab          
        }
      });

     $('#cost').autoNumeric('init',{aSep:''});

      var categoryDataSource = new RemoteDataSource('/api/booking-categories?all=true',{'id':'code','description':'name'});
      var categoryValue = (this.entity && this.entity.category_code)?this.entity.category_code:null;
      var categorySelector = new SelectSelector('category[code]', categoryDataSource, categoryValue); 

    },
      
    adaptFormData : function(data) {
            
      if ($('#active').length > 0) {
        if ($('#active').prop('checked')) {
          data.active = true;
        }
        else {
          data.active = false;
        }
      }

      if ($('#own_property').length > 0) {
        if ($('#own_property').prop('checked')) {
          data.own_property = true;
        }
        else {
          data.own_property = false;
        }
      }

      if ($('#assignable').length > 0) {
        if ($('#assignable').prop('checked')) {
            data.assignable = true;
        }
        else {
            data.assignable = false;
        }
      }

      return data;  
      
    }

  };

  var urls = { query_url  : '/api/booking-items',
               create_url : '/api/booking-item',
               update_url : '/api/booking-item',
               delete_url : '/api/booking-item',
               get_url    : '/api/booking-item'
             };
  
  var hooks = [bookingItemHook];
  
  // Add the complement hooks
  hooks = hooks.concat(EntityManagementComplementHooks.complements);
                 
  var contentsManager = new EntityManagement(urls, 'booking_item', 20, hooks,
    {prefix: '/admin/booking',hold_form_after_action:true});

  
});